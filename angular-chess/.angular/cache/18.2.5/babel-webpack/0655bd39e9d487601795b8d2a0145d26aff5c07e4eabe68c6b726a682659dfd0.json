{"ast":null,"code":"import _asyncToGenerator from \"/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ChessBase } from './chess-base.';\nimport { ChessFactory } from './chess.factory';\nimport './chess.helpers';\nimport { io } from 'socket.io-client';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./localstorage.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"white\": a0,\n  \"black\": a1\n});\nconst _c1 = a0 => ({\n  \"active\": a0\n});\nconst _c2 = a0 => ({\n  \"left\": a0\n});\nfunction ChessComponent_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.infoToBlack);\n  }\n}\nfunction ChessComponent_div_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_8_span_1_Template_span_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const name_r4 = ctx_r2.$implicit;\n      const i_r5 = ctx_r2.index;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onPromotionClick(name_r4, i_r5));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.classNameOfPromotion(name_r4, \"white\"));\n  }\n}\nfunction ChessComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, ChessComponent_div_8_span_1_Template, 1, 1, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.whitePromotionList);\n  }\n}\nfunction ChessComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", col_r6, \" \");\n  }\n}\nfunction ChessComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 22);\n  }\n}\nfunction ChessComponent_tr_15_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵlistener(\"click\", function ChessComponent_tr_15_td_3_Template_td_click_0_listener() {\n      const j_r8 = i0.ɵɵrestoreView(_r7).index;\n      const i_r9 = i0.ɵɵnextContext().index;\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.onCellClick(j_r8, i_r9));\n    });\n    i0.ɵɵelement(1, \"span\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const j_r8 = ctx.index;\n    const i_r9 = i0.ɵɵnextContext().index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r0.isCellWhite(j_r8, i_r9), !ctx_r0.isCellWhite(j_r8, i_r9)));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.classNameOfFigure(j_r8, i_r9));\n  }\n}\nfunction ChessComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ChessComponent_tr_15_td_3_Template, 2, 5, \"td\", 23);\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r10 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r10);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.x);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r10);\n  }\n}\nfunction ChessComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const col_r11 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", col_r11, \" \");\n  }\n}\nfunction ChessComponent_div_20_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_20_span_1_Template_span_click_0_listener() {\n      const ctx_r12 = i0.ɵɵrestoreView(_r12);\n      const name_r14 = ctx_r12.$implicit;\n      const i_r15 = ctx_r12.index;\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onPromotionClick(name_r14, i_r15));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r14 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.classNameOfPromotion(name_r14, \"black\"));\n  }\n}\nfunction ChessComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, ChessComponent_div_20_span_1_Template, 1, 1, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.blackPromotionList);\n  }\n}\nfunction ChessComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.infoToWhite);\n  }\n}\nfunction ChessComponent_span_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"White, Black\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChessComponent_span_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Viewer\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChessComponent_div_43_div_2_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"input\", 35);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChessComponent_div_43_div_2_div_2_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.roomNameForCreate, $event) || (ctx_r0.roomNameForCreate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_43_div_2_div_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0.onCreateGameClick());\n    });\n    i0.ɵɵtext(3, \" Create Game \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.roomNameForCreate);\n  }\n}\nfunction ChessComponent_div_43_div_2_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 37);\n    i0.ɵɵtext(1, \"offline\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChessComponent_div_43_div_2_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 38);\n    i0.ɵɵtext(1, \"online\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChessComponent_div_43_div_2_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" Room: \", ctx_r0.roomNameForCreate, \", PIN: \", ctx_r0.PINForJoin, \" \");\n  }\n}\nfunction ChessComponent_div_43_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29);\n    i0.ɵɵtemplate(2, ChessComponent_div_43_div_2_div_2_Template, 4, 1, \"div\", 30);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \" Local gamer: \");\n    i0.ɵɵelementStart(5, \"b\");\n    i0.ɵɵtext(6, \"white\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \", Remote gamer: \");\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9, \"black\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(10, \" - \");\n    i0.ɵɵtemplate(11, ChessComponent_div_43_div_2_span_11_Template, 2, 0, \"span\", 31)(12, ChessComponent_div_43_div_2_span_12_Template, 2, 0, \"span\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtemplate(14, ChessComponent_div_43_div_2_span_14_Template, 2, 2, \"span\", 33);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isRoomCreated);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isBlackGamerJoined);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isBlackGamerJoined);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isRoomCreated);\n  }\n}\nfunction ChessComponent_div_43_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 34)(2, \"input\", 40);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChessComponent_div_43_div_3_div_2_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.roomNameForJoin, $event) || (ctx_r0.roomNameForJoin = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 41);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChessComponent_div_43_div_3_div_2_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.PINForJoin, $event) || (ctx_r0.PINForJoin = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 42);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_43_div_3_div_2_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0.onJoinAsGamerClick());\n    });\n    i0.ɵɵtext(5, \" Join as Gamer \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_43_div_3_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0.onJoinAsViewerClick());\n    });\n    i0.ɵɵtext(7, \" Join as Viewer \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.roomNameForJoin);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.PINForJoin);\n  }\n}\nfunction ChessComponent_div_43_div_3_div_3_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 37);\n    i0.ɵɵtext(1, \" We are waiting for the black player to join... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChessComponent_div_43_div_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"span\");\n    i0.ɵɵtext(2, \" Local gamer: \");\n    i0.ɵɵelementStart(3, \"b\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \", Remote gamer: \");\n    i0.ɵɵelementStart(6, \"b\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵtemplate(9, ChessComponent_div_43_div_3_div_3_span_9_Template, 2, 0, \"span\", 31);\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"span\", 39);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.isViewerJoined ? \"-\" : \"black\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.isViewerJoined ? \"white, black\" : \"white\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isStarted && ctx_r0.isViewerJoined);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" Room: \", ctx_r0.roomNameForJoin, \", PIN: \", ctx_r0.PINForJoin, \" \");\n  }\n}\nfunction ChessComponent_div_43_div_3_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 37);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.joinMsg, \" \");\n  }\n}\nfunction ChessComponent_div_43_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29);\n    i0.ɵɵtemplate(2, ChessComponent_div_43_div_3_div_2_Template, 8, 2, \"div\", 4)(3, ChessComponent_div_43_div_3_div_3_Template, 13, 5, \"div\", 4)(4, ChessComponent_div_43_div_3_span_4_Template, 2, 1, \"span\", 31);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !(ctx_r0.isStarted || ctx_r0.isJoinDisabled));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isStarted || ctx_r0.isViewerJoined);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.joinMsg);\n  }\n}\nfunction ChessComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 11);\n    i0.ɵɵtemplate(2, ChessComponent_div_43_div_2_Template, 15, 4, \"div\", 27)(3, ChessComponent_div_43_div_3_Template, 5, 3, \"div\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isMultiplayerCreateOptionsDisabled);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isMultiplayerJoinOptionsDisabled);\n  }\n}\nfunction ChessComponent_div_44_div_2_li_5_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 48);\n  }\n  if (rf & 2) {\n    const step_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"white \" + step_r18.white.figure);\n  }\n}\nfunction ChessComponent_div_44_div_2_li_5_span_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 48);\n  }\n  if (rf & 2) {\n    const step_r18 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"black \" + (step_r18.black == null ? null : step_r18.black.figure));\n  }\n}\nfunction ChessComponent_div_44_div_2_li_5_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 49);\n    i0.ɵɵtemplate(1, ChessComponent_div_44_div_2_li_5_span_4_span_1_Template, 1, 1, \"span\", 46);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", step_r18.black == null ? null : step_r18.black.figure);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", step_r18.black == null ? null : step_r18.black.notation, \" \");\n  }\n}\nfunction ChessComponent_div_44_div_2_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"span\");\n    i0.ɵɵtemplate(2, ChessComponent_div_44_div_2_li_5_span_2_Template, 1, 1, \"span\", 46);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ChessComponent_div_44_div_2_li_5_span_4_Template, 3, 2, \"span\", 47);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r18 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", step_r18.white.figure);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", step_r18.white.notation, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", step_r18.black);\n  }\n}\nfunction ChessComponent_div_44_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 44)(2, \"h5\", 45);\n    i0.ɵɵtext(3, \"Step notation\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ol\");\n    i0.ɵɵtemplate(5, ChessComponent_div_44_div_2_li_5_Template, 5, 3, \"li\", 7);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.steps);\n  }\n}\nfunction ChessComponent_div_44_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_44_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onLoadGameClick());\n    });\n    i0.ɵɵtext(2, \" Load \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 51);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_44_div_5_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onSaveGameClick());\n    });\n    i0.ɵɵtext(4, \" Save \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChessComponent_div_44_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 34)(2, \"input\", 52);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChessComponent_div_44_div_6_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.nameForSave, $event) || (ctx_r0.nameForSave = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_44_div_6_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onSaveClick());\n    });\n    i0.ɵɵtext(4, \" Save \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.nameForSave);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.nameForSave);\n  }\n}\nfunction ChessComponent_div_44_div_7_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_44_div_7_button_3_Template_button_click_0_listener() {\n      const i_r23 = i0.ɵɵrestoreView(_r22).index;\n      const ctx_r0 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r0.onSelectGameClick(i_r23));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 59);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r24 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, i_r23 === ctx_r0.selectedItemForLoad));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r24.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" - \", item_r24.date, \"\");\n  }\n}\nfunction ChessComponent_div_44_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 54)(2, \"div\", 55);\n    i0.ɵɵtemplate(3, ChessComponent_div_44_div_7_button_3_Template, 4, 5, \"button\", 56);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_44_div_7_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onLoadClick());\n    });\n    i0.ɵɵtext(5, \" Load \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.gameList);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isGameSelectedForLoad);\n  }\n}\nfunction ChessComponent_div_44_div_9_span_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 48);\n  }\n  if (rf & 2) {\n    const msg_r26 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngClass\", msg_r26.player + \" king\");\n  }\n}\nfunction ChessComponent_div_44_div_9_span_7_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 69);\n    i0.ɵɵtext(1, \"[viewer]\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChessComponent_div_44_div_9_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 65);\n    i0.ɵɵtemplate(1, ChessComponent_div_44_div_9_span_7_span_1_Template, 1, 1, \"span\", 46)(2, ChessComponent_div_44_div_9_span_7_span_2_Template, 2, 0, \"span\", 66);\n    i0.ɵɵelementStart(3, \"span\", 67);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 68);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r26 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c2, msg_r26.isOwnMessage));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", msg_r26.player);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !msg_r26.player);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r26.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r26.message);\n  }\n}\nfunction ChessComponent_div_44_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"h5\", 45);\n    i0.ɵɵtext(3, \"Chat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 34)(5, \"input\", 60);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChessComponent_div_44_div_9_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.nameForChat, $event) || (ctx_r0.nameForChat = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 61);\n    i0.ɵɵtemplate(7, ChessComponent_div_44_div_9_span_7_Template, 7, 7, \"span\", 62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 34)(9, \"input\", 63);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function ChessComponent_div_44_div_9_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r0.messageForChat, $event) || (ctx_r0.messageForChat = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 64);\n    i0.ɵɵlistener(\"click\", function ChessComponent_div_44_div_9_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r0 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r0.onSendMessageClick());\n    });\n    i0.ɵɵtext(11, \" Send \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.nameForChat);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.chatMessages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r0.messageForChat);\n  }\n}\nfunction ChessComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 10);\n    i0.ɵɵtemplate(2, ChessComponent_div_44_div_2_Template, 6, 1, \"div\", 27);\n    i0.ɵɵelementStart(3, \"div\", 28)(4, \"div\", 29);\n    i0.ɵɵtemplate(5, ChessComponent_div_44_div_5_Template, 5, 0, \"div\", 4)(6, ChessComponent_div_44_div_6_Template, 5, 2, \"div\", 4)(7, ChessComponent_div_44_div_7_Template, 6, 2, \"div\", 4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 10);\n    i0.ɵɵtemplate(9, ChessComponent_div_44_div_9_Template, 12, 3, \"div\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isLoadDetailVisible);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSaveAndLoadVisible);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSaveDetailVisible);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoadDetailVisible);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isMultiPlayer);\n  }\n}\nexport class StepDetail {\n  constructor(step, additionalStep, fig, isStrike = false, isCheck = false, isCheckMate = false, isShowFromX = false, isShowFromY = false) {\n    this.step = step;\n    this.additionalStep = additionalStep;\n    this.fig = fig;\n    this.isStrike = isStrike;\n    this.isCheck = isCheck;\n    this.isCheckMate = isCheckMate;\n    this.isShowFromX = isShowFromX;\n    this.isShowFromY = isShowFromY;\n    this.x = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    this.y = ['8', '7', '6', '5', '4', '3', '2', '1'];\n    if (this.additionalStep) {\n      this.isShowFromX = false;\n      this.isShowFromY = false;\n    }\n  }\n  get figure() {\n    let _retVal = this.fig;\n    if (this.fig === 'pawn') {\n      _retVal = '';\n    } else if (this.additionalStep) {\n      _retVal = 'king';\n    }\n    return _retVal;\n  }\n  get castling() {\n    let _retVal = '';\n    if (this.additionalStep) {\n      _retVal = this.additionalStep.to?.x === 6 ? ' 0-0' : ' 0-0-0';\n    }\n    return _retVal;\n  }\n  get notation() {\n    let _retVal = '';\n    if (!this.figure && this.isStrike || this.isShowFromX || this.isShowFromY) {\n      _retVal += this.step ? this.x[this.step.from.x] : '';\n    }\n    if (this.isShowFromY) {\n      _retVal += this.step ? this.y[this.step.from.y] : '';\n    }\n    if (this.isStrike) {\n      _retVal += 'x';\n    }\n    _retVal += this.step ? this.x[this.step.to.x] : '';\n    _retVal += this.step ? this.y[this.step.to.y] : '';\n    _retVal += this.castling;\n    if (!this.isCheckMate && this.isCheck) {\n      _retVal += '+';\n    }\n    if (this.isCheckMate) {\n      _retVal += '#';\n    }\n    return _retVal;\n  }\n}\nexport class ChessComponent {\n  constructor(_localStorage) {\n    this._localStorage = _localStorage;\n    this.x = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    this.y = ['8', '7', '6', '5', '4', '3', '2', '1'];\n    this.msg = '';\n    this.joinMsg = '';\n    this.roomNameForCreate = '';\n    this.roomNameForJoin = '';\n    this.PINForJoin = '';\n    this.nameForChat = '';\n    this.messageForChat = '';\n    this.nameForSave = '';\n    this.steps = [];\n    this.chatMessages = [];\n    this.gameList = [];\n    this.isWhiteNext = true;\n    this.isClickedFrom = true;\n    this.step = {\n      from: null,\n      to: null\n    };\n    this.isGameStarted = false;\n    this.isSinglePlayerGame = true;\n    this.isMultiPlayerGameCreated = false;\n    this.isMultiPlayerRoomCreated = false;\n    this.isRemoteBlackGamerJoined = false;\n    this.isJoinedAsGamer = false;\n    this.isJoinedAsViewer = false;\n    this.localGamers = ['white', 'black'];\n    this.socketId = '';\n    this.isSaveGameEnabled = false;\n    this.isLoadGameEnabled = false;\n    this.isLocaleLoaded = false;\n    this.gameListSelectedItem = -1;\n    this.chessBase = ChessBase.instance;\n    this.chessBase.events.subscribe('stepFinished', eventArgs => {\n      this.onStep(eventArgs);\n    });\n    this.chessBase.events.subscribe('stepIllegal', () => {\n      this.clearStep();\n    });\n    this.chessBase.events.subscribe('promotionFinished', () => {\n      this.onPromotion();\n    });\n    this.chessBase.events.subscribe('checkmate', () => {\n      this.onCheckMate();\n    });\n    this.chessBase.events.subscribe('resign', () => {\n      this.onResign();\n    });\n    this.fillBoard();\n    this.socket = io(environment.SOCKET_ENDPOINT, {\n      transports: [\"polling\", \"websocket\"]\n    });\n    this.socket.on('game-created', PIN => {\n      if (PIN) {\n        this.isMultiPlayerRoomCreated = true;\n        this.PINForJoin = PIN;\n      }\n    });\n    this.socket.on('gamer-joined', () => {\n      this.isGameStarted = true;\n      if (this.localGamers.includes('white')) {\n        this.isRemoteBlackGamerJoined = true;\n      }\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    });\n    this.socket.on('viewer-joined', isStarted => {\n      this.isGameStarted = isStarted;\n    });\n    this.socket.on('id', (socketId, isBoardChanged) => {\n      this.socketId = socketId;\n      if (isBoardChanged) {\n        this.socket.emit('get-board', this.roomNameForJoin, this.PINForJoin, this.socketId);\n      }\n    });\n    this.socket.on('get-board-to', socketId => {\n      if (this.colorOfLocalGamer === 'White') {\n        this.socket.emit('board', this.roomNameForCreate, this.PINForJoin, socketId, this.chessBase.board, this.steps, this.colorOfNext, this.isWhiteResigned, this.isBlackResigned);\n      }\n    });\n    this.socket.on('board-to', (board, steps, colorOfNext, isWhiteResigned, isBlackResigned) => {\n      this.onSyncronize(board, steps, colorOfNext, isWhiteResigned, isBlackResigned);\n    });\n    this.socket.on('board-to-all', (board, steps, colorOfNext, isWhiteResigned, isBlackResigned) => {\n      if (!this.isLocaleLoaded) {\n        this.onSyncronize(board, steps, colorOfNext, isWhiteResigned, isBlackResigned);\n      }\n      this.isLocaleLoaded = false;\n    });\n    this.socket.on('invalid-room', () => {\n      this.isJoinedAsGamer = false;\n      this.isJoinedAsViewer = false;\n      this.localGamers = ['white', 'black'];\n      this.joinMsg = 'Invalid room or PIN!';\n    });\n    this.socket.on('invalid-gamer', () => {\n      this.isJoinedAsGamer = false;\n      this.localGamers = ['white', 'black'];\n      this.joinMsg = 'Invalid gamer! (All players have already joined this room.)';\n    });\n    this.socket.on('step-to', eventArgs => {\n      if (!this.localGamers.includes(eventArgs.color)) {\n        this.chessBase.stepFromRemote(eventArgs.step, eventArgs.enPassant);\n        if ('additionalStep' in eventArgs) {\n          this.chessBase.stepFromRemote(eventArgs.additionalStep, null);\n        }\n        if (eventArgs.state && eventArgs.state === 'pawn_promotion') {\n          this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next. We are waiting for the pawn to convert.';\n        } else {\n          this.isWhiteNext = !this.isWhiteNext;\n          this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n          // test check, checkmate, dead position, stalemate\n          if (this.isCheckToWhite || this.isCheckToBlack) {\n            this.chessBase.testCheckForRemote(eventArgs.color);\n          }\n          this.chessBase.processCombinatedTests(this.colorOfNext);\n        }\n        this.setStepNotation(eventArgs);\n      }\n    });\n    this.socket.on('pawn-converted', (name, color, step) => {\n      if (!this.localGamers.includes(color)) {\n        this.chessBase.convertPawnFromRemote(name, color, step);\n        this.isWhiteNext = !this.isWhiteNext;\n        this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n        // test check, checkmate, dead position, stalemate\n        this.chessBase.processCombinatedTests(this.colorOfNext);\n      }\n    });\n    this.socket.on('message-sended', (player, name, socketId, message) => {\n      const chatmessage = {\n        player: player,\n        name: name,\n        message: message,\n        isOwnMessage: this.socketId === socketId\n      };\n      this.chatMessages.push(chatmessage);\n    });\n  }\n  get colorOfNext() {\n    return this.isWhiteNext ? 'white' : 'black';\n  }\n  get isNextLocalGamer() {\n    return this.localGamers.includes(this.colorOfNext);\n  }\n  get colorOfWinner() {\n    return this.isCheckMateToWhite || this.isWhiteResigned ? 'black' : this.isCheckMateToBlack || this.isBlackResigned ? 'white' : '';\n  }\n  get colorOfLocalGamer() {\n    let _retVal = '';\n    if (this.isMultiPlayer && (this.isJoinedAsGamer || this.isMultiPlayerGameCreated)) {\n      _retVal = this.localGamers[0].toUpperCaseFirstLetter();\n    }\n    return _retVal;\n  }\n  get isCheckToWhite() {\n    return this.chessBase.isCheckToWhite;\n  }\n  get isCheckToBlack() {\n    return this.chessBase.isCheckToBlack;\n  }\n  get isCheckMateToWhite() {\n    return this.chessBase.isCheckMateToWhite;\n  }\n  get isCheckMateToBlack() {\n    return this.chessBase.isCheckMateToBlack;\n  }\n  get isWhiteResigned() {\n    return this.chessBase.isWhiteResigned;\n  }\n  get isBlackResigned() {\n    return this.chessBase.isBlackResigned;\n  }\n  get isExistsInfoToWhite() {\n    return this.isCheckToWhite || this.isCheckMateToWhite || this.isWhiteResigned;\n  }\n  get isExistsInfoToBlack() {\n    return this.isCheckToBlack || this.isCheckMateToBlack || this.isBlackResigned;\n  }\n  get infoToWhite() {\n    let _retVal = '';\n    if (this.isCheckMateToWhite) {\n      _retVal = 'Checkmate!';\n    } else if (this.isCheckToWhite) {\n      _retVal = 'Check!';\n    } else if (this.isWhiteResigned) {\n      _retVal = 'Resigned!';\n    }\n    return _retVal;\n  }\n  get infoToBlack() {\n    let _retVal = '';\n    if (this.isCheckMateToBlack) {\n      _retVal = 'Checkmate!';\n    } else if (this.isCheckToBlack) {\n      _retVal = 'Check!';\n    } else if (this.isBlackResigned) {\n      _retVal = 'Resigned!';\n    }\n    return _retVal;\n  }\n  get isGameEnded() {\n    // checkmate || resigning\n    return this.isCheckMateToWhite || this.isCheckMateToBlack || this.isWhiteResigned || this.isBlackResigned;\n  }\n  get isStarted() {\n    return this.isGameStarted;\n  }\n  get isWhiteResignDisabled() {\n    return !this.localGamers.includes('white');\n  }\n  get isBlackResignDisabled() {\n    return !this.localGamers.includes('black');\n  }\n  get isSinglePlayer() {\n    return this.isSinglePlayerGame;\n  }\n  set isSinglePlayer(value) {\n    if (this.isSinglePlayerGame != value) {\n      this.isSinglePlayerGame = value;\n    }\n  }\n  get isMultiPlayer() {\n    return !this.isSinglePlayerGame;\n  }\n  get isPlayerModeSelectionDisabled() {\n    return this.isMultiPlayerGameCreated || this.isMultiplayerCreateOptionsDisabled;\n  }\n  get isMultiplayerJoinOptionsDisabled() {\n    return this.isMultiPlayerGameCreated;\n  }\n  get isMultiplayerCreateOptionsDisabled() {\n    return this.isJoinedAsGamer || this.isJoinedAsViewer;\n  }\n  get isJoinDisabled() {\n    return this.isJoinedAsGamer || this.isJoinedAsViewer;\n  }\n  get isViewerJoined() {\n    return this.isJoinedAsViewer;\n  }\n  get isRoomCreated() {\n    return this.isMultiPlayerRoomCreated;\n  }\n  get isBlackGamerJoined() {\n    return this.isRemoteBlackGamerJoined;\n  }\n  get isPromoteWhite() {\n    return this.chessBase.isPawnPromotionWhite;\n  }\n  get isPromoteBlack() {\n    return this.chessBase.isPawnPromotionBlack;\n  }\n  get isLoaderVisible() {\n    return this.chessBase.isLoaderVisible;\n  }\n  get isTestInProgress() {\n    return this.chessBase.isTestInProgress;\n  }\n  get blackPromotionList() {\n    return this.chessBase.blackPromotionList;\n  }\n  get whitePromotionList() {\n    return this.chessBase.whitePromotionList;\n  }\n  get isSaveDetailVisible() {\n    return this.isSaveGameEnabled;\n  }\n  get isLoadDetailVisible() {\n    return this.isLoadGameEnabled;\n  }\n  get isSaveAndLoadVisible() {\n    return !(this.isSaveDetailVisible || this.isLoadDetailVisible);\n  }\n  get isGameSelectedForLoad() {\n    return this.gameListSelectedItem > -1;\n  }\n  get selectedItemForLoad() {\n    return this.gameListSelectedItem;\n  }\n  ngOnInit() {}\n  onBeforeUnload($event) {\n    this.ngOnDestroy();\n    $event.preventDefault();\n    delete $event['returnValue'];\n  }\n  ngOnDestroy() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.isMultiPlayer) {\n        _this.msg = 'Disconnecting...';\n      }\n    })();\n  }\n  onCellClick(x, y) {\n    const isStepEnabled = this.isStarted && this.isNextLocalGamer || this.isSinglePlayer;\n    if (!(this.isPromoteWhite || this.isPromoteBlack || this.isTestInProgress || this.isGameEnded) && isStepEnabled) {\n      if (this.isClickedFrom) {\n        this.setFrom(x, y);\n      } else {\n        this.setTo(x, y);\n      }\n    }\n  }\n  onPromotionClick(name, i) {\n    const color = this.isPromoteWhite ? 'white' : 'black';\n    if (this.isMultiPlayer && this.localGamers.includes(color)) {\n      const roomName = color === 'white' ? this.roomNameForCreate : this.roomNameForJoin;\n      this.socket.emit('convert-pawn', roomName, this.PINForJoin, name, color, this.step);\n    }\n    this.chessBase.convertPawn(name, color, this.step, i);\n  }\n  onResignClick(color) {\n    this.chessBase.resign(color);\n  }\n  onCreateGameClick() {\n    if (!this.isMultiPlayerGameCreated && this.roomNameForCreate) {\n      this.isMultiPlayerGameCreated = true;\n      const i = this.localGamers.indexOf('black');\n      this.localGamers.splice(i, 1);\n      this.socket.emit('start-game', this.roomNameForCreate);\n    }\n  }\n  onJoinAsGamerClick() {\n    if (!(this.isJoinedAsGamer || this.isJoinedAsViewer) && this.roomNameForJoin && this.PINForJoin && this.PINForJoin.length === 4) {\n      this.isJoinedAsGamer = true;\n      this.joinMsg = '';\n      const i = this.localGamers.indexOf('white');\n      this.localGamers.splice(i, 1);\n      this.socket.emit('join', this.roomNameForJoin, this.PINForJoin, false);\n    }\n  }\n  onJoinAsViewerClick() {\n    if (!(this.isJoinedAsGamer || this.isJoinedAsViewer) && this.roomNameForJoin && this.PINForJoin && this.PINForJoin.length === 4) {\n      this.isJoinedAsViewer = true;\n      this.joinMsg = '';\n      this.localGamers = [];\n      this.socket.emit('join', this.roomNameForJoin, this.PINForJoin, true);\n    }\n  }\n  onSendMessageClick() {\n    const roomName = this.roomNameForCreate ? this.roomNameForCreate : this.roomNameForJoin;\n    this.socket.emit('message', roomName, this.PINForJoin, this.colorOfLocalGamer.toLowerCaseFirstLetter(), this.nameForChat, this.socketId, this.messageForChat);\n    this.messageForChat = '';\n  }\n  onSaveGameClick() {\n    this.nameForSave = '';\n    this.isSaveGameEnabled = true;\n  }\n  onLoadGameClick() {\n    this.gameList = this._localStorage.getList();\n    this.gameListSelectedItem = -1;\n    this.isLoadGameEnabled = true;\n  }\n  onSaveClick() {\n    // save\n    const data = {\n      board: this.chessBase.board,\n      steps: this.steps,\n      next: this.colorOfNext,\n      isWhiteResigned: this.isWhiteResigned,\n      isBlackResigned: this.isBlackResigned,\n      date: new Date().toJSON().slice(0, 16).replace('T', ' ')\n    };\n    this._localStorage.setItem(this.nameForSave, data);\n    this.isSaveGameEnabled = false;\n  }\n  onLoadClick() {\n    const name = this.gameList[this.gameListSelectedItem].name;\n    const data = this._localStorage.loadItem(name);\n    if (data) {\n      this.onSyncronize(data.board, data.steps, data.next, data.isWhiteResigned, data.isBlackResigned);\n      if (this.isMultiPlayer) {\n        this.isLocaleLoaded = true;\n        const roomName = this.roomNameForCreate ? this.roomNameForCreate : this.roomNameForJoin;\n        this.socket.emit('board-loaded', roomName, this.PINForJoin, this.chessBase.board, this.steps, this.colorOfNext, this.isWhiteResigned, this.isBlackResigned);\n      }\n    }\n    this.isLoadGameEnabled = false;\n  }\n  onSelectGameClick(i) {\n    this.gameListSelectedItem = i;\n  }\n  gameModeChange(e) {\n    this.isSinglePlayerGame = e.target.id === 'singlePlayer';\n  }\n  isCellWhite(x, y) {\n    // board colorize\n    return x % 2 === 0 && y % 2 === 0 || x % 2 !== 0 && y % 2 !== 0;\n  }\n  colorOfFigure(x, y) {\n    const fig = this.getFigure(x, y);\n    return fig ? fig.color : \"\";\n  }\n  classNameOfFigure(x, y) {\n    const fig = this.getFigure(x, y);\n    return fig ? fig.color + \" \" + fig.name : \"\";\n  }\n  classNameOfPromotion(name, color) {\n    return color + \" \" + name;\n  }\n  clearStep() {\n    this.msg = 'This step is illegal! ' + this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    this.step = {\n      from: null,\n      to: null\n    };\n    this.isClickedFrom = !this.isClickedFrom;\n  }\n  onStep(eventArgs) {\n    // TODO: add step to list\n    if (eventArgs && eventArgs.state === 'pawn_promotion') {\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next. Convert the pawn to another!';\n    } else {\n      this.step = {\n        from: null,\n        to: null\n      };\n      this.isClickedFrom = !this.isClickedFrom;\n      this.isWhiteNext = !this.isWhiteNext;\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n      // test check, checkmate, dead position, stalemate\n      this.chessBase.processCombinatedTests(this.colorOfNext);\n    }\n    this.setStepNotation(eventArgs);\n    if (eventArgs && this.isMultiPlayer && this.localGamers.includes(eventArgs.color)) {\n      const roomName = eventArgs.color === 'white' ? this.roomNameForCreate : this.roomNameForJoin;\n      this.socket.emit('step', roomName, this.PINForJoin, eventArgs);\n    }\n  }\n  setStepNotation(eventArgs) {\n    if (eventArgs) {\n      if (eventArgs.color === 'white') {\n        // new notation\n        const item = {\n          white: new StepDetail(eventArgs.step, eventArgs.additionalStep ? eventArgs.additionalStep : null, eventArgs.fig, eventArgs.strike, this.isCheckToBlack, this.isCheckMateToBlack, this.getShowFromX(eventArgs.fig, 'white', eventArgs.step), this.getShowFromY(eventArgs.fig, 'white', eventArgs.step)),\n          black: null\n        };\n        this.steps.push(item);\n      } else {\n        // last notation\n        const item = this.steps[this.steps.length - 1];\n        item.black = new StepDetail(eventArgs.step, eventArgs.additionalStep ? eventArgs.additionalStep : null, eventArgs.fig, eventArgs.strike, this.isCheckToWhite, this.isCheckMateToWhite, this.getShowFromX(eventArgs.fig, 'black', eventArgs.step), this.getShowFromY(eventArgs.fig, 'black', eventArgs.step));\n      }\n    } else {\n      const item = this.steps[this.steps.length - 1];\n      if (this.isWhiteNext) {\n        // set black\n        item.black.isCheck = this.isCheckToBlack;\n        item.black.isCheckMate = this.isCheckMateToBlack;\n      } else {\n        // set white\n        item.white.isCheck = this.isCheckToWhite;\n        item.white.isCheckMate = this.isCheckMateToWhite;\n      }\n    }\n  }\n  getShowFromX(figure, color, step) {\n    let _retVal = false;\n    if (figure === 'rook') {\n      if (step.from?.y === step.to?.y) {\n        for (let i = 0; i < 8; i++) {\n          if (i !== step.from?.x && i !== step.to?.x) {\n            const fig = this.chessBase.getFigure(i, step.from.y);\n            if (fig && fig.name === 'rook' && fig.color === color) {\n              _retVal = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n    return _retVal;\n  }\n  getShowFromY(figure, color, step) {\n    let _retVal = false;\n    if (figure === 'rook') {\n      if (step.from?.x === step.to?.x) {\n        for (let i = 0; i < 8; i++) {\n          if (i !== step.from?.y && i !== step.to?.y) {\n            const fig = this.chessBase.getFigure(step.from.x, i);\n            if (fig && fig.name === 'rook' && fig.color === color) {\n              _retVal = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n    return _retVal;\n  }\n  onSyncronize(board, steps, colorOfNext, isWhiteResigned, isBlackResigned) {\n    this.syncronizeBoard(board);\n    this.syncronizeSteps(steps);\n    this.isWhiteNext = colorOfNext === 'white';\n    if (isWhiteResigned || isBlackResigned) {\n      const color = isWhiteResigned ? 'white' : 'black';\n      this.onResignClick(color);\n    } else {\n      this.chessBase.processCombinatedTests(this.colorOfNext);\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    }\n  }\n  onPromotion() {\n    this.onStep(null);\n  }\n  onCheckMate() {\n    this.msg = 'Checkmate. ' + this.colorOfWinner.toUpperCaseFirstLetter() + ' won!';\n  }\n  onResign() {\n    const resignedColor = this.isWhiteResigned ? 'white' : 'black';\n    this.msg = resignedColor.toUpperCaseFirstLetter() + ' resigned. ' + this.colorOfWinner.toUpperCaseFirstLetter() + ' won!';\n  }\n  getFigure(x, y) {\n    return this.chessBase.getFigure(x, y);\n  }\n  setFrom(x, y) {\n    const fig = this.getFigure(x, y);\n    if (fig && fig.color === this.colorOfNext) {\n      if (!this.isStarted) {\n        this.isGameStarted = true;\n      }\n      this.isClickedFrom = !this.isClickedFrom;\n      this.step.from = {\n        x: x,\n        y: y\n      };\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ': Click the next cell!';\n    } else {\n      this.msg = 'This step is illegal! ' + this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    }\n  }\n  setTo(x, y) {\n    this.step.to = {\n      x: x,\n      y: y\n    };\n    const chessBase = ChessBase.instance;\n    chessBase.stepAwayIfPossible(this.step);\n  }\n  syncronizeBoard(board) {\n    this.chessBase.board = [];\n    for (let i = 0; i < board.length; i++) {\n      const element = board[i];\n      if (element.figure?.name) {\n        ChessFactory.createFigure(element.figure.name, element.figure.color, element.x, element.y);\n      }\n    }\n  }\n  syncronizeSteps(steps) {\n    this.steps = [];\n    for (let i = 0; i < steps.length; i++) {\n      const element = steps[i];\n      const item = {\n        white: new StepDetail(element.white.step, element.white.additionalStep, element.white.fig, element.white.isStrike, element.white.isCheck, element.white.isCheckMate, element.white.isShowFromX, element.white.isShowFromY),\n        black: null\n      };\n      if (element.black) {\n        item.black = new StepDetail(element.black.step, element.black.additionalStep, element.black.fig, element.black.isStrike, element.black.isCheck, element.black.isCheckMate, element.black.isShowFromX, element.black.isShowFromY);\n      }\n      this.steps.push(item);\n    }\n  }\n  fillBoard() {\n    //init white figures\n    for (let i = 0; i < this.x.length; i++) {\n      const element = this.x[i];\n      // row 2 - Pawn\n      ChessFactory.createFigure(\"pawn\", \"white\", i, 8 - 2);\n      // row 1\n      if (element === 'a' || element === 'h') {\n        // Rook\n        ChessFactory.createFigure(\"rook\", \"white\", i, 8 - 1);\n      } else if (element === 'b' || element === 'g') {\n        // Knight\n        ChessFactory.createFigure(\"knight\", \"white\", i, 8 - 1);\n      } else if (element === 'c' || element === 'f') {\n        // Bishop\n        ChessFactory.createFigure(\"bishop\", \"white\", i, 8 - 1);\n      } else if (element === 'd') {\n        // Queen\n        ChessFactory.createFigure(\"queen\", \"white\", i, 8 - 1);\n      } else if (element === 'e') {\n        // King\n        ChessFactory.createFigure(\"king\", \"white\", i, 8 - 1);\n      }\n    }\n    //init black figures\n    for (let i = 0; i < this.x.length; i++) {\n      const element = this.x[i];\n      // row 7 - Pawn\n      ChessFactory.createFigure(\"pawn\", \"black\", i, 8 - 7);\n      // row 8\n      if (element === 'a' || element === 'h') {\n        // Rook\n        ChessFactory.createFigure(\"rook\", \"black\", i, 8 - 8);\n      } else if (element === 'b' || element === 'g') {\n        // Knight\n        ChessFactory.createFigure(\"knight\", \"black\", i, 8 - 8);\n      } else if (element === 'c' || element === 'f') {\n        // Bishop\n        ChessFactory.createFigure(\"bishop\", \"black\", i, 8 - 8);\n      } else if (element === 'd') {\n        // Queen\n        ChessFactory.createFigure(\"queen\", \"black\", i, 8 - 8);\n      } else if (element === 'e') {\n        // King\n        ChessFactory.createFigure(\"king\", \"black\", i, 8 - 8);\n      }\n    }\n  }\n  static {\n    this.ɵfac = function ChessComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChessComponent)(i0.ɵɵdirectiveInject(i1.LocalStorageService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChessComponent,\n      selectors: [[\"app-chess\"]],\n      hostBindings: function ChessComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"beforeunload\", function ChessComponent_beforeunload_HostBindingHandler($event) {\n            return ctx.onBeforeUnload($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      decls: 45,\n      vars: 18,\n      consts: [[1, \"container\"], [1, \"row\"], [1, \"col-12\", \"col-xl-6\", \"board-div\"], [1, \"check-info\"], [4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\", \"btn-resign\", 3, \"click\", \"disabled\"], [\"class\", \"promotion-list\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"promotion-list promotion-black\", 4, \"ngIf\"], [1, \"col-12\", \"col-md-6\"], [1, \"col\"], [\"role\", \"group\", \"aria-label\", \"Basic radio toggle button group\", 1, \"btn-group\"], [\"type\", \"radio\", \"name\", \"btnradio\", \"id\", \"singlePlayer\", \"autocomplete\", \"off\", \"checked\", \"\", 1, \"btn-check\", 3, \"change\", \"disabled\"], [\"for\", \"singlePlayer\", 1, \"btn\", \"btn-outline-primary\"], [\"type\", \"radio\", \"name\", \"btnradio\", \"id\", \"multiPlayer\", \"autocomplete\", \"off\", 1, \"btn-check\", 3, \"change\", \"disabled\"], [\"for\", \"multiPlayer\", 1, \"btn\", \"btn-outline-primary\"], [1, \"gamer-info\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"promotion-list\"], [\"class\", \"chess-icons\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"chess-icons\", 3, \"click\", \"ngClass\"], [1, \"loader\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\", \"ngClass\"], [1, \"chess-icons\", 3, \"ngClass\"], [1, \"promotion-list\", \"promotion-black\"], [\"class\", \"card\", 4, \"ngIf\"], [1, \"card\"], [1, \"card-body\"], [\"class\", \"input-group\", 4, \"ngIf\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [\"style\", \"color: green;\", 4, \"ngIf\"], [\"class\", \"multiplayer-info\", 4, \"ngIf\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Name of Room\", \"aria-label\", \"Room\", \"aria-describedby\", \"button-create\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", \"id\", \"button-create\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [2, \"color\", \"red\"], [2, \"color\", \"green\"], [1, \"multiplayer-info\"], [\"type\", \"text\", \"placeholder\", \"Name of Room\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"PIN for Room\", \"mask\", \"0000\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", \"id\", \"button-join-gamer\", 1, \"btn\", \"btn-outline-secondary\", \"btn-join\", 3, \"click\"], [\"type\", \"button\", \"id\", \"button-join-viwer\", 1, \"btn\", \"btn-outline-secondary\", \"btn-join\", 3, \"click\"], [1, \"card-body\", \"steps\"], [1, \"card-title\"], [\"class\", \"chess-icons s16\", 3, \"ngClass\", 4, \"ngIf\"], [\"style\", \"margin-left: 20px;\", 4, \"ngIf\"], [1, \"chess-icons\", \"s16\", 3, \"ngClass\"], [2, \"margin-left\", \"20px\"], [\"type\", \"button\", \"id\", \"button-load-game\", 1, \"btn\", \"btn-outline-secondary\", 2, \"margin-right\", \"15px\", 3, \"click\"], [\"type\", \"button\", \"id\", \"button-save-game\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Name of Game\", \"aria-label\", \"Name\", \"aria-describedby\", \"button-save\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", \"id\", \"button-save\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\", \"disabled\"], [1, \"game-list\"], [1, \"list-group\"], [\"type\", \"button\", \"class\", \"list-group-item list-group-item-action\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"id\", \"button-load\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\", \"disabled\"], [\"type\", \"button\", 1, \"list-group-item\", \"list-group-item-action\", 3, \"click\", \"ngClass\"], [1, \"bold\"], [\"type\", \"text\", \"placeholder\", \"Name for Chat\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"chat\"], [\"class\", \"chat-message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Message\", \"aria-label\", \"Message\", \"aria-describedby\", \"button-send-message\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"button\", \"id\", \"button-send-message\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"chat-message\", 3, \"ngClass\"], [\"class\", \"viewer-icon\", 4, \"ngIf\"], [1, \"name\"], [1, \"msg\"], [1, \"viewer-icon\"]],\n      template: function ChessComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtext(4, \" \\u00A0 \");\n          i0.ɵɵtemplate(5, ChessComponent_span_5_Template, 2, 1, \"span\", 4);\n          i0.ɵɵelementStart(6, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ChessComponent_Template_button_click_6_listener() {\n            return ctx.onResignClick(\"black\");\n          });\n          i0.ɵɵtext(7, \" Resign \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, ChessComponent_div_8_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementStart(9, \"table\")(10, \"tr\");\n          i0.ɵɵelement(11, \"th\");\n          i0.ɵɵtemplate(12, ChessComponent_th_12_Template, 2, 1, \"th\", 7);\n          i0.ɵɵelementStart(13, \"th\");\n          i0.ɵɵtemplate(14, ChessComponent_div_14_Template, 1, 0, \"div\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(15, ChessComponent_tr_15_Template, 6, 3, \"tr\", 7);\n          i0.ɵɵelementStart(16, \"tr\");\n          i0.ɵɵelement(17, \"td\");\n          i0.ɵɵtemplate(18, ChessComponent_td_18_Template, 2, 1, \"td\", 7);\n          i0.ɵɵelement(19, \"td\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(20, ChessComponent_div_20_Template, 2, 1, \"div\", 9);\n          i0.ɵɵelementStart(21, \"div\", 3);\n          i0.ɵɵtext(22, \" \\u00A0 \");\n          i0.ɵɵtemplate(23, ChessComponent_span_23_Template, 2, 1, \"span\", 4);\n          i0.ɵɵelementStart(24, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ChessComponent_Template_button_click_24_listener() {\n            return ctx.onResignClick(\"white\");\n          });\n          i0.ɵɵtext(25, \" Resign \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"p\");\n          i0.ɵɵtext(27);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 10)(29, \"div\", 1)(30, \"div\", 11)(31, \"div\", 12)(32, \"input\", 13);\n          i0.ɵɵlistener(\"change\", function ChessComponent_Template_input_change_32_listener($event) {\n            return ctx.gameModeChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"label\", 14);\n          i0.ɵɵtext(34, \"Single player\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"input\", 15);\n          i0.ɵɵlistener(\"change\", function ChessComponent_Template_input_change_35_listener($event) {\n            return ctx.gameModeChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(36, \"label\", 16);\n          i0.ɵɵtext(37, \"Multi player\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(38, \"div\", 17);\n          i0.ɵɵtemplate(39, ChessComponent_span_39_Template, 2, 0, \"span\", 4);\n          i0.ɵɵelementStart(40, \"span\");\n          i0.ɵɵtext(41);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(42, ChessComponent_span_42_Template, 2, 0, \"span\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(43, ChessComponent_div_43_Template, 4, 2, \"div\", 18)(44, ChessComponent_div_44_Template, 10, 5, \"div\", 18);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.isExistsInfoToBlack);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isGameEnded || ctx.isBlackResignDisabled);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isPromoteWhite);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.x);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoaderVisible);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.y);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.x);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isPromoteBlack);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.isExistsInfoToWhite);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isGameEnded || ctx.isWhiteResignDisabled);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.msg);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.isStarted || ctx.isPlayerModeSelectionDisabled);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.isStarted || ctx.isPlayerModeSelectionDisabled);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.isStarted && ctx.isSinglePlayer);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.colorOfLocalGamer);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isViewerJoined);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isMultiPlayer);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isStarted);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"table[_ngcontent-%COMP%] {\\n  border-collapse: collapse;\\n}\\ntd[_ngcontent-%COMP%], \\nth[_ngcontent-%COMP%] {\\n  border: 1px solid lightgray;\\n  width: 3rem;\\n  height: 3rem;\\n  text-align: center;\\n  vertical-align: middle;\\n  font-weight: bold;\\n}\\ntd.white[_ngcontent-%COMP%] {\\n  background-color: #ffaa80;\\n}\\ntd.black[_ngcontent-%COMP%] {\\n  background-color: #cc4400;\\n}\\nspan.chess-icons[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 95%;\\n  height: 95%;\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n}\\nspan.chess-icons.white.rook[_ngcontent-%COMP%] {\\n  background-image: url('Chess_rlt45.svg');\\n}\\nspan.chess-icons.white.knight[_ngcontent-%COMP%] {\\n  background-image: url('Chess_nlt45.svg');\\n}\\nspan.chess-icons.white.bishop[_ngcontent-%COMP%] {\\n  background-image: url('Chess_blt45.svg');\\n}\\nspan.chess-icons.white.queen[_ngcontent-%COMP%] {\\n  background-image: url('Chess_qlt45.svg');\\n}\\nspan.chess-icons.white.king[_ngcontent-%COMP%] {\\n  background-image: url('Chess_klt45.svg');\\n}\\nspan.chess-icons.white.pawn[_ngcontent-%COMP%] {\\n  background-image: url('Chess_plt45.svg');\\n}\\nspan.chess-icons.black.rook[_ngcontent-%COMP%] {\\n  background-image: url('Chess_rdt45.svg');\\n}\\nspan.chess-icons.black.knight[_ngcontent-%COMP%] {\\n  background-image: url('Chess_ndt45.svg');\\n}\\nspan.chess-icons.black.bishop[_ngcontent-%COMP%] {\\n  background-image: url('Chess_bdt45.svg');\\n}\\nspan.chess-icons.black.queen[_ngcontent-%COMP%] {\\n  background-image: url('Chess_qdt45.svg');\\n}\\nspan.chess-icons.black.king[_ngcontent-%COMP%] {\\n  background-image: url('Chess_kdt45.svg');\\n}\\nspan.chess-icons.black.pawn[_ngcontent-%COMP%] {\\n  background-image: url('Chess_pdt45.svg');\\n}\\ndiv.check-info[_ngcontent-%COMP%] {\\n  color: red;\\n  font-weight: bold;\\n  font-size: 14px;\\n  width: 30rem;\\n  max-width: 100%;\\n  text-align: right;\\n}\\n.btn-resign[_ngcontent-%COMP%] {\\n  margin: 5px;\\n}\\n.btn-join[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  margin-right: 10px;\\n}\\n.multiplayer-info[_ngcontent-%COMP%] {\\n  margin: 10px;\\n  font-weight: bold;\\n}\\n.gamer-info[_ngcontent-%COMP%] {\\n  float: right;\\n  font-size: 16px;\\n  font-weight: bold;\\n}\\n.promotion-list[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background-color: bisque;\\n}\\n.promotion-black[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: -50px;\\n  display: inline-block;\\n}\\n.promotion-list[_ngcontent-%COMP%]   span.chess-icons[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  margin-right: 20px;\\n}\\n.steps[_ngcontent-%COMP%], \\n.chat[_ngcontent-%COMP%], \\n.game-list[_ngcontent-%COMP%] {\\n  height: 20rem;\\n  overflow-y: auto;\\n}\\nspan.chess-icons.s16[_ngcontent-%COMP%] {\\n  display: inline-block;\\n  width: 20px;\\n  height: 20px;\\n  background-size: contain;\\n}\\n.game-list[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   span.bold[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n.chat[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%] {\\n  display: block;\\n  float: right;\\n  text-align: right;\\n  clear: both;\\n  margin-left: 30px;\\n  margin-right: 0px;\\n}\\n.chat[_ngcontent-%COMP%]   .chat-message.left[_ngcontent-%COMP%] {\\n  float: left;\\n  text-align: left;\\n  margin-left: 0px;\\n  margin-right: 30px;\\n}\\n.chat[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]   .name[_ngcontent-%COMP%] {\\n  margin-left: 10px;\\n  font-weight: bold;\\n}\\n.chat[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]   .viewer-icon[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n.chat[_ngcontent-%COMP%]   .chat-message[_ngcontent-%COMP%]   .msg[_ngcontent-%COMP%] {\\n  border: solid 1px gray;\\n  background-color: #f2f2f2;\\n  border-radius: 5px;\\n}\\n.chat[_ngcontent-%COMP%]   .chat-message.left[_ngcontent-%COMP%]   .msg[_ngcontent-%COMP%] {\\n  border: solid 1px darkblue;\\n  background-color: #b3c6ff;\\n  color: darkblue;\\n}\\n.loader[_ngcontent-%COMP%] {\\n  border: 5px solid #f3f3f3;\\n  border-radius: 50%;\\n  border-top: 5px solid #3498db;\\n  width: 20px;\\n  height: 20px;\\n  \\n\\n  animation: _ngcontent-%COMP%_spin 2s linear infinite;\\n}\\n\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hlc3MvY2hlc3MuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBUSx5QkFBQTtBQUVSO0FBREE7O0VBQVMsMkJBQUE7RUFBNkIsV0FBQTtFQUFhLFlBQUE7RUFDL0Msa0JBQUE7RUFBb0Isc0JBQUE7RUFBd0IsaUJBQUE7QUFTaEQ7QUFSQTtFQUFXLHlCQUFBO0FBV1g7QUFWQTtFQUFXLHlCQUFBO0FBYVg7QUFYQTtFQUFtQixjQUFBO0VBQWdCLFVBQUE7RUFBWSxXQUFBO0VBQWEsd0JBQUE7RUFBMEIsNEJBQUE7QUFrQnRGO0FBaEJBO0VBQThCLHdDQUFBO0FBbUI5QjtBQWxCQTtFQUFnQyx3Q0FBQTtBQXFCaEM7QUFwQkE7RUFBZ0Msd0NBQUE7QUF1QmhDO0FBdEJBO0VBQStCLHdDQUFBO0FBeUIvQjtBQXhCQTtFQUE4Qix3Q0FBQTtBQTJCOUI7QUExQkE7RUFBOEIsd0NBQUE7QUE2QjlCO0FBM0JBO0VBQThCLHdDQUFBO0FBOEI5QjtBQTdCQTtFQUFnQyx3Q0FBQTtBQWdDaEM7QUEvQkE7RUFBZ0Msd0NBQUE7QUFrQ2hDO0FBakNBO0VBQStCLHdDQUFBO0FBb0MvQjtBQW5DQTtFQUE4Qix3Q0FBQTtBQXNDOUI7QUFyQ0E7RUFBOEIsd0NBQUE7QUF3QzlCO0FBdENBO0VBQWlCLFVBQUE7RUFBWSxpQkFBQTtFQUFtQixlQUFBO0VBQWlCLFlBQUE7RUFBYyxlQUFBO0VBQWlCLGlCQUFBO0FBOENoRztBQTdDQTtFQUFjLFdBQUE7QUFnRGQ7QUEvQ0E7RUFBWSxnQkFBQTtFQUFrQixrQkFBQTtBQW1EOUI7QUFsREE7RUFBb0IsWUFBQTtFQUFjLGlCQUFBO0FBc0RsQztBQXJEQTtFQUFjLFlBQUE7RUFBYyxlQUFBO0VBQWlCLGlCQUFBO0FBMEQ3QztBQXhEQTtFQUFrQixrQkFBQTtFQUFvQix3QkFBQTtBQTREdEM7QUEzREE7RUFBbUIsa0JBQUE7RUFBb0IsVUFBQTtFQUFZLHFCQUFBO0FBZ0VuRDtBQS9EQTtFQUFtQyxxQkFBQTtFQUF1QixrQkFBQTtBQW1FMUQ7QUFqRUE7OztFQUE0QixhQUFBO0VBQWUsZ0JBQUE7QUF1RTNDO0FBdEVBO0VBQXVCLHFCQUFBO0VBQXVCLFdBQUE7RUFBYSxZQUFBO0VBQWMsd0JBQUE7QUE0RXpFO0FBMUVBO0VBQThCLGlCQUFBO0FBNkU5QjtBQTNFQTtFQUFzQixjQUFBO0VBQWdCLFlBQUE7RUFBYyxpQkFBQTtFQUFtQixXQUFBO0VBQWEsaUJBQUE7RUFBbUIsaUJBQUE7QUFtRnZHO0FBbEZBO0VBQTJCLFdBQUE7RUFBYSxnQkFBQTtFQUFrQixnQkFBQTtFQUFrQixrQkFBQTtBQXdGNUU7QUF2RkE7RUFBNEIsaUJBQUE7RUFBbUIsaUJBQUE7QUEyRi9DO0FBMUZBO0VBQW1DLGlCQUFBO0FBNkZuQztBQTVGQTtFQUEyQixzQkFBQTtFQUF3Qix5QkFBQTtFQUEyQixrQkFBQTtBQWlHOUU7QUFoR0E7RUFBZ0MsMEJBQUE7RUFBNEIseUJBQUE7RUFBMkIsZUFBQTtBQXFHdkY7QUFuR0E7RUFDSSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsNkJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQXNHRixXQUFXO0VBcEdULGtDQUFBO0FBc0dKO0FBQ0EsV0FBVztBQTlGVDtFQUNFO0lBQUssdUJBQUE7RUF5R1A7RUF4R0U7SUFBTyx5QkFBQTtFQTJHVDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUgeyBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9XG50ZCwgdGggeyBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyYXk7IHdpZHRoOiAzcmVtOyBoZWlnaHQ6IDNyZW07ICBcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XG50ZC53aGl0ZSB7IGJhY2tncm91bmQtY29sb3I6ICNmZmFhODA7IH1cbnRkLmJsYWNrIHsgYmFja2dyb3VuZC1jb2xvcjogI2NjNDQwMDsgfVxuXG5zcGFuLmNoZXNzLWljb25zIHsgZGlzcGxheTogYmxvY2s7IHdpZHRoOiA5NSU7IGhlaWdodDogOTUlOyBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7IH1cblxuc3Bhbi5jaGVzcy1pY29ucy53aGl0ZS5yb29rIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1nL0NoZXNzX3JsdDQ1LnN2ZycpOyB9XG5zcGFuLmNoZXNzLWljb25zLndoaXRlLmtuaWdodCB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL2ltZy9DaGVzc19ubHQ0NS5zdmcnKTsgfVxuc3Bhbi5jaGVzcy1pY29ucy53aGl0ZS5iaXNob3AgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvQ2hlc3NfYmx0NDUuc3ZnJyk7IH1cbnNwYW4uY2hlc3MtaWNvbnMud2hpdGUucXVlZW4geyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvQ2hlc3NfcWx0NDUuc3ZnJyk7IH1cbnNwYW4uY2hlc3MtaWNvbnMud2hpdGUua2luZyB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL2ltZy9DaGVzc19rbHQ0NS5zdmcnKTsgfVxuc3Bhbi5jaGVzcy1pY29ucy53aGl0ZS5wYXduIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1nL0NoZXNzX3BsdDQ1LnN2ZycpOyB9XG5cbnNwYW4uY2hlc3MtaWNvbnMuYmxhY2sucm9vayB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL2ltZy9DaGVzc19yZHQ0NS5zdmcnKTsgfVxuc3Bhbi5jaGVzcy1pY29ucy5ibGFjay5rbmlnaHQgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvQ2hlc3NfbmR0NDUuc3ZnJyk7IH1cbnNwYW4uY2hlc3MtaWNvbnMuYmxhY2suYmlzaG9wIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1nL0NoZXNzX2JkdDQ1LnN2ZycpOyB9XG5zcGFuLmNoZXNzLWljb25zLmJsYWNrLnF1ZWVuIHsgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcuLi8uLi9hc3NldHMvaW1nL0NoZXNzX3FkdDQ1LnN2ZycpOyB9XG5zcGFuLmNoZXNzLWljb25zLmJsYWNrLmtpbmcgeyBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9pbWcvQ2hlc3Nfa2R0NDUuc3ZnJyk7IH1cbnNwYW4uY2hlc3MtaWNvbnMuYmxhY2sucGF3biB7IGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vYXNzZXRzL2ltZy9DaGVzc19wZHQ0NS5zdmcnKTsgfVxuXG5kaXYuY2hlY2staW5mbyB7IGNvbG9yOiByZWQ7IGZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6IDE0cHg7IHdpZHRoOiAzMHJlbTsgbWF4LXdpZHRoOiAxMDAlOyB0ZXh0LWFsaWduOiByaWdodDsgfVxuLmJ0bi1yZXNpZ24geyBtYXJnaW46IDVweDsgfVxuLmJ0bi1qb2luIHsgbWFyZ2luLXRvcDogMTBweDsgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG4ubXVsdGlwbGF5ZXItaW5mbyB7IG1hcmdpbjogMTBweDsgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cbi5nYW1lci1pbmZvIHsgZmxvYXQ6IHJpZ2h0OyBmb250LXNpemU6IDE2cHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XG5cbi5wcm9tb3Rpb24tbGlzdCB7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgYmFja2dyb3VuZC1jb2xvcjogYmlzcXVlOyB9XG4ucHJvbW90aW9uLWJsYWNrIHsgcG9zaXRpb246IHJlbGF0aXZlOyB0b3A6IC01MHB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbi5wcm9tb3Rpb24tbGlzdCBzcGFuLmNoZXNzLWljb25zIHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cblxuLnN0ZXBzLCAuY2hhdCwgLmdhbWUtbGlzdCB7IGhlaWdodDogMjByZW07IG92ZXJmbG93LXk6IGF1dG87IH1cbnNwYW4uY2hlc3MtaWNvbnMuczE2IHsgZGlzcGxheTogaW5saW5lLWJsb2NrOyB3aWR0aDogMjBweDsgaGVpZ2h0OiAyMHB4OyBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IH1cblxuLmdhbWUtbGlzdCBidXR0b24gc3Bhbi5ib2xkIHsgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLmNoYXQgLmNoYXQtbWVzc2FnZSB7IGRpc3BsYXk6IGJsb2NrOyBmbG9hdDogcmlnaHQ7IHRleHQtYWxpZ246IHJpZ2h0OyBjbGVhcjogYm90aDsgbWFyZ2luLWxlZnQ6IDMwcHg7IG1hcmdpbi1yaWdodDogMHB4OyB9XG4uY2hhdCAuY2hhdC1tZXNzYWdlLmxlZnQgeyBmbG9hdDogbGVmdDsgdGV4dC1hbGlnbjogbGVmdDsgbWFyZ2luLWxlZnQ6IDBweDsgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG4uY2hhdCAuY2hhdC1tZXNzYWdlIC5uYW1lIHsgbWFyZ2luLWxlZnQ6IDEwcHg7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4uY2hhdCAuY2hhdC1tZXNzYWdlIC52aWV3ZXItaWNvbiB7IGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4uY2hhdCAuY2hhdC1tZXNzYWdlIC5tc2cgeyBib3JkZXI6IHNvbGlkIDFweCBncmF5OyBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyOyBib3JkZXItcmFkaXVzOiA1cHg7IH1cbi5jaGF0IC5jaGF0LW1lc3NhZ2UubGVmdCAubXNnIHsgYm9yZGVyOiBzb2xpZCAxcHggZGFya2JsdWU7IGJhY2tncm91bmQtY29sb3I6ICNiM2M2ZmY7IGNvbG9yOiBkYXJrYmx1ZTsgfVxuXG4ubG9hZGVyIHtcbiAgICBib3JkZXI6IDVweCBzb2xpZCAjZjNmM2YzO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBib3JkZXItdG9wOiA1cHggc29saWQgIzM0OThkYjtcbiAgICB3aWR0aDogMjBweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgLXdlYmtpdC1hbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlOyAvKiBTYWZhcmkgKi9cbiAgICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlO1xuICB9XG4gIFxuICAvKiBTYWZhcmkgKi9cbiAgQC13ZWJraXQta2V5ZnJhbWVzIHNwaW4ge1xuICAgIDAlIHsgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfVxuICAgIDEwMCUgeyAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cbiAgfVxuICBcbiAgQGtleWZyYW1lcyBzcGluIHtcbiAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gICAgMTAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7IH1cbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["ChessBase","ChessFactory","io","environment","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","infoToBlack","ɵɵlistener","ChessComponent_div_8_span_1_Template_span_click_0_listener","ctx_r2","ɵɵrestoreView","_r2","name_r4","$implicit","i_r5","index","ɵɵnextContext","ɵɵresetView","onPromotionClick","ɵɵproperty","classNameOfPromotion","ɵɵtemplate","ChessComponent_div_8_span_1_Template","whitePromotionList","ɵɵtextInterpolate1","col_r6","ɵɵelement","ChessComponent_tr_15_td_3_Template_td_click_0_listener","j_r8","_r7","i_r9","onCellClick","ɵɵpureFunction2","_c0","isCellWhite","classNameOfFigure","ChessComponent_tr_15_td_3_Template","row_r10","x","col_r11","ChessComponent_div_20_span_1_Template_span_click_0_listener","ctx_r12","_r12","name_r14","i_r15","ChessComponent_div_20_span_1_Template","blackPromotionList","infoToWhite","ɵɵtwoWayListener","ChessComponent_div_43_div_2_div_2_Template_input_ngModelChange_1_listener","$event","_r16","ɵɵtwoWayBindingSet","roomNameForCreate","ChessComponent_div_43_div_2_div_2_Template_button_click_2_listener","onCreateGameClick","ɵɵtwoWayProperty","ɵɵtextInterpolate2","PINForJoin","ChessComponent_div_43_div_2_div_2_Template","ChessComponent_div_43_div_2_span_11_Template","ChessComponent_div_43_div_2_span_12_Template","ChessComponent_div_43_div_2_span_14_Template","isRoomCreated","isBlackGamerJoined","ChessComponent_div_43_div_3_div_2_Template_input_ngModelChange_2_listener","_r17","roomNameForJoin","ChessComponent_div_43_div_3_div_2_Template_input_ngModelChange_3_listener","ChessComponent_div_43_div_3_div_2_Template_button_click_4_listener","onJoinAsGamerClick","ChessComponent_div_43_div_3_div_2_Template_button_click_6_listener","onJoinAsViewerClick","ChessComponent_div_43_div_3_div_3_span_9_Template","isViewerJoined","isStarted","joinMsg","ChessComponent_div_43_div_3_div_2_Template","ChessComponent_div_43_div_3_div_3_Template","ChessComponent_div_43_div_3_span_4_Template","isJoinDisabled","ChessComponent_div_43_div_2_Template","ChessComponent_div_43_div_3_Template","isMultiplayerCreateOptionsDisabled","isMultiplayerJoinOptionsDisabled","step_r18","white","figure","black","ChessComponent_div_44_div_2_li_5_span_4_span_1_Template","notation","ChessComponent_div_44_div_2_li_5_span_2_Template","ChessComponent_div_44_div_2_li_5_span_4_Template","ChessComponent_div_44_div_2_li_5_Template","steps","ChessComponent_div_44_div_5_Template_button_click_1_listener","_r19","onLoadGameClick","ChessComponent_div_44_div_5_Template_button_click_3_listener","onSaveGameClick","ChessComponent_div_44_div_6_Template_input_ngModelChange_2_listener","_r20","nameForSave","ChessComponent_div_44_div_6_Template_button_click_3_listener","onSaveClick","ChessComponent_div_44_div_7_button_3_Template_button_click_0_listener","i_r23","_r22","onSelectGameClick","ɵɵpureFunction1","_c1","selectedItemForLoad","item_r24","name","date","ChessComponent_div_44_div_7_button_3_Template","ChessComponent_div_44_div_7_Template_button_click_4_listener","_r21","onLoadClick","gameList","isGameSelectedForLoad","msg_r26","player","ChessComponent_div_44_div_9_span_7_span_1_Template","ChessComponent_div_44_div_9_span_7_span_2_Template","_c2","isOwnMessage","message","ChessComponent_div_44_div_9_Template_input_ngModelChange_5_listener","_r25","nameForChat","ChessComponent_div_44_div_9_span_7_Template","ChessComponent_div_44_div_9_Template_input_ngModelChange_9_listener","messageForChat","ChessComponent_div_44_div_9_Template_button_click_10_listener","onSendMessageClick","chatMessages","ChessComponent_div_44_div_2_Template","ChessComponent_div_44_div_5_Template","ChessComponent_div_44_div_6_Template","ChessComponent_div_44_div_7_Template","ChessComponent_div_44_div_9_Template","isLoadDetailVisible","isSaveAndLoadVisible","isSaveDetailVisible","isMultiPlayer","StepDetail","constructor","step","additionalStep","fig","isStrike","isCheck","isCheckMate","isShowFromX","isShowFromY","y","_retVal","castling","to","from","ChessComponent","_localStorage","msg","isWhiteNext","isClickedFrom","isGameStarted","isSinglePlayerGame","isMultiPlayerGameCreated","isMultiPlayerRoomCreated","isRemoteBlackGamerJoined","isJoinedAsGamer","isJoinedAsViewer","localGamers","socketId","isSaveGameEnabled","isLoadGameEnabled","isLocaleLoaded","gameListSelectedItem","chessBase","instance","events","subscribe","eventArgs","onStep","clearStep","onPromotion","onCheckMate","onResign","fillBoard","socket","SOCKET_ENDPOINT","transports","on","PIN","includes","colorOfNext","toUpperCaseFirstLetter","isBoardChanged","emit","colorOfLocalGamer","board","isWhiteResigned","isBlackResigned","onSyncronize","color","stepFromRemote","enPassant","state","isCheckToWhite","isCheckToBlack","testCheckForRemote","processCombinatedTests","setStepNotation","convertPawnFromRemote","chatmessage","push","isNextLocalGamer","colorOfWinner","isCheckMateToWhite","isCheckMateToBlack","isExistsInfoToWhite","isExistsInfoToBlack","isGameEnded","isWhiteResignDisabled","isBlackResignDisabled","isSinglePlayer","value","isPlayerModeSelectionDisabled","isPromoteWhite","isPawnPromotionWhite","isPromoteBlack","isPawnPromotionBlack","isLoaderVisible","isTestInProgress","ngOnInit","onBeforeUnload","ngOnDestroy","preventDefault","_this","_asyncToGenerator","isStepEnabled","setFrom","setTo","i","roomName","convertPawn","onResignClick","resign","indexOf","splice","length","toLowerCaseFirstLetter","getList","data","next","Date","toJSON","slice","replace","setItem","loadItem","gameModeChange","e","target","id","colorOfFigure","getFigure","item","strike","getShowFromX","getShowFromY","syncronizeBoard","syncronizeSteps","resignedColor","stepAwayIfPossible","element","createFigure","ɵɵdirectiveInject","i1","LocalStorageService","selectors","hostBindings","ChessComponent_HostBindings","rf","ctx","ChessComponent_beforeunload_HostBindingHandler","ɵɵresolveWindow","ChessComponent_span_5_Template","ChessComponent_Template_button_click_6_listener","ChessComponent_div_8_Template","ChessComponent_th_12_Template","ChessComponent_div_14_Template","ChessComponent_tr_15_Template","ChessComponent_td_18_Template","ChessComponent_div_20_Template","ChessComponent_span_23_Template","ChessComponent_Template_button_click_24_listener","ChessComponent_Template_input_change_32_listener","ChessComponent_Template_input_change_35_listener","ChessComponent_span_39_Template","ChessComponent_span_42_Template","ChessComponent_div_43_Template","ChessComponent_div_44_Template"],"sources":["/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/src/app/chess/chess.component.ts","/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/src/app/chess/chess.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { ChessBase } from './chess-base.';\nimport { ChessFactory } from './chess.factory';\nimport './chess.helpers';\nimport { io } from 'socket.io-client';\nimport { environment } from 'src/environments/environment';\nimport { LocalStorageService } from './localstorage.service';\n\nexport class StepDetail implements IStepDetail {\n  \n  private x: string[] = ['a','b','c','d','e','f','g','h'];\n  private y: string[] = ['8','7','6','5','4','3','2','1'];\n\n  constructor(public step: IStep, public additionalStep: IStep | null, public fig: string,\n      public isStrike: boolean = false, public isCheck: boolean = false, public isCheckMate: boolean = false,\n      public isShowFromX: boolean = false,  public isShowFromY: boolean = false) {\n    if (this.additionalStep) {\n      this.isShowFromX = false;\n      this.isShowFromY = false;\n    }\n  }\n\n  get figure(): string {\n    let _retVal = this.fig;\n\n    if (this.fig === 'pawn') {\n      _retVal = '';\n    }\n    else if (this.additionalStep) {\n      _retVal = 'king';\n    }\n\n    return _retVal;\n  }\n\n  get castling(): string {\n    let _retVal = '';\n\n    if (this.additionalStep) {\n      _retVal = (this.additionalStep.to?.x === 6) ? ' 0-0': ' 0-0-0';\n    }\n\n    return _retVal;\n  }\n\n  get notation(): string {\n    let _retVal = '';\n\n    if ((!this.figure && this.isStrike) || this.isShowFromX || this.isShowFromY) {\n      _retVal += (this.step) ? this.x[this.step.from!.x] : '';\n    }\n    if (this.isShowFromY) {\n      _retVal += (this.step) ? this.y[this.step.from!.y] : '';\n    }\n    if (this.isStrike) {\n      _retVal += 'x';\n    }\n    _retVal += (this.step) ? this.x[this.step.to!.x] : '';\n    _retVal += (this.step) ? this.y[this.step.to!.y] : '';\n    _retVal += this.castling;\n    if (!this.isCheckMate && this.isCheck) {\n      _retVal += '+';\n    }\n    if (this.isCheckMate) {\n      _retVal += '#';\n    }\n\n    return _retVal;\n  }\n} \n\n@Component({\n  selector: 'app-chess',\n  templateUrl: './chess.component.html',\n  styleUrls: ['./chess.component.less']\n})\nexport class ChessComponent implements OnInit, OnDestroy {\n\n  x: string[] = ['a','b','c','d','e','f','g','h'];\n  y: string[] = ['8','7','6','5','4','3','2','1'];\n  msg: string = '';\n  joinMsg: string = '';\n  roomNameForCreate: string = '';\n  roomNameForJoin: string = '';\n  PINForJoin: string = '';\n  nameForChat: string = '';\n  messageForChat: string = '';\n  nameForSave: string = '';\n  socket;\n  steps: IStepNotation[] = [];\n  chatMessages: IChatMessage[] = [];\n  gameList: IGameListItem[] = [];\n\n  private chessBase: ChessBase;\n  private isWhiteNext: boolean = true;\n  private isClickedFrom: boolean = true;\n  private step: IStep = { from: null, to: null };\n  private isGameStarted: boolean = false;\n  private isSinglePlayerGame: boolean = true;\n  private isMultiPlayerGameCreated: boolean = false;\n  private isMultiPlayerRoomCreated: boolean = false;\n  private isRemoteBlackGamerJoined: boolean = false;\n  private isJoinedAsGamer: boolean = false;\n  private isJoinedAsViewer: boolean = false;\n  private localGamers: string[] = ['white', 'black'];\n  private socketId: string = '';\n  private isSaveGameEnabled: boolean = false;\n  private isLoadGameEnabled: boolean = false;\n  private isLocaleLoaded: boolean = false;\n  private gameListSelectedItem: number = -1;\n\n  constructor(private _localStorage: LocalStorageService) { \n    this.chessBase = ChessBase.instance;\n    \n    this.chessBase.events.subscribe('stepFinished', (eventArgs: any) => { this.onStep(eventArgs); });\n    this.chessBase.events.subscribe('stepIllegal', () => { this.clearStep(); });\n    this.chessBase.events.subscribe('promotionFinished', () => { this.onPromotion(); });\n    this.chessBase.events.subscribe('checkmate', () => { this.onCheckMate(); });\n    this.chessBase.events.subscribe('resign', () => { this.onResign(); });\n\n    this.fillBoard();\n\n    this.socket = io(environment.SOCKET_ENDPOINT, {\n      transports: [\"polling\", \"websocket\"]\n    });\n\n    this.socket.on('game-created', (PIN: string) => {\n      if (PIN) {\n        this.isMultiPlayerRoomCreated = true;\n        this.PINForJoin = PIN;\n      }\n    });\n\n    this.socket.on('gamer-joined', () => {\n      this.isGameStarted = true;\n      if (this.localGamers.includes('white')) {\n        this.isRemoteBlackGamerJoined = true;\n      }\n\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    });\n\n    this.socket.on('viewer-joined', (isStarted: boolean) => {\n      this.isGameStarted = isStarted;\n    });\n\n    this.socket.on('id', (socketId: string, isBoardChanged: boolean) => {\n      this.socketId = socketId;\n\n      if (isBoardChanged) {\n        this.socket.emit('get-board', this.roomNameForJoin, this.PINForJoin, this.socketId);\n      }\n    });\n\n    this.socket.on('get-board-to', (socketId: string) => {\n      if (this.colorOfLocalGamer === 'White') {\n        this.socket.emit('board', this.roomNameForCreate, this.PINForJoin, socketId, \n            this.chessBase.board, this.steps, this.colorOfNext, this.isWhiteResigned, this.isBlackResigned);\n      }\n    });\n\n    this.socket.on('board-to', (board: ICell[], steps: IStepNotation[], colorOfNext: string, isWhiteResigned: boolean, isBlackResigned: boolean) => {\n      this.onSyncronize(board, steps, colorOfNext, isWhiteResigned, isBlackResigned);\n    });\n\n    this.socket.on('board-to-all', (board: ICell[], steps: IStepNotation[], colorOfNext: string, isWhiteResigned: boolean, isBlackResigned: boolean) => {\n      if (!this.isLocaleLoaded) {\n        this.onSyncronize(board, steps, colorOfNext, isWhiteResigned, isBlackResigned);\n      }\n      this.isLocaleLoaded = false;\n    });\n\n    this.socket.on('invalid-room', () => {\n      this.isJoinedAsGamer = false;\n      this.isJoinedAsViewer = false;\n      this.localGamers = ['white', 'black'];\n      this.joinMsg = 'Invalid room or PIN!';\n    });\n\n    this.socket.on('invalid-gamer', () => {\n      this.isJoinedAsGamer = false;\n      this.localGamers = ['white', 'black'];\n      this.joinMsg = 'Invalid gamer! (All players have already joined this room.)';\n    });\n\n    this.socket.on('step-to', (eventArgs) => {\n      if (!this.localGamers.includes(eventArgs.color)){\n        this.chessBase.stepFromRemote(eventArgs.step, eventArgs.enPassant);\n\n        if ('additionalStep' in eventArgs) {\n          this.chessBase.stepFromRemote(eventArgs.additionalStep, null);\n        }\n\n        if (eventArgs.state && eventArgs.state === 'pawn_promotion') {\n          this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next. We are waiting for the pawn to convert.';\n        }\n        else {\n          this.isWhiteNext = !this.isWhiteNext;\n          this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n\n          // test check, checkmate, dead position, stalemate\n          if (this.isCheckToWhite || this.isCheckToBlack) {\n            this.chessBase.testCheckForRemote(eventArgs.color);  \n          }\n          this.chessBase.processCombinatedTests(this.colorOfNext);\n        }\n\n        this.setStepNotation(eventArgs);\n      }\n    });\n\n    this.socket.on('pawn-converted', (name, color, step) => {\n      if (!this.localGamers.includes(color)){\n        this.chessBase.convertPawnFromRemote(name, color, step);\n\n        this.isWhiteNext = !this.isWhiteNext;\n        this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n\n        // test check, checkmate, dead position, stalemate\n        this.chessBase.processCombinatedTests(this.colorOfNext);\n      }\n    });\n\n    this.socket.on('message-sended', (player, name, socketId, message) => {\n      const chatmessage: IChatMessage = {\n        player: player,\n        name: name,\n        message: message,\n        isOwnMessage: (this.socketId === socketId)\n      };\n      this.chatMessages.push(chatmessage);\n    });\n  }\n\n  get colorOfNext(): string {\n    return (this.isWhiteNext) ? 'white' : 'black';\n  }\n\n  get isNextLocalGamer(): boolean {\n    return this.localGamers.includes(this.colorOfNext);\n  }\n\n  get colorOfWinner(): string {\n    return (this.isCheckMateToWhite || this.isWhiteResigned) ? 'black' : (this.isCheckMateToBlack || this.isBlackResigned) ? 'white' : '';\n  }\n\n  get colorOfLocalGamer(): string {\n    let _retVal = '';\n    if (this.isMultiPlayer && (this.isJoinedAsGamer || this.isMultiPlayerGameCreated)) {\n      _retVal = this.localGamers[0].toUpperCaseFirstLetter();\n    }\n    return _retVal;\n  }\n\n  get isCheckToWhite(): boolean {\n    return this.chessBase.isCheckToWhite;\n  }\n\n  get isCheckToBlack(): boolean {\n    return this.chessBase.isCheckToBlack;\n  }\n\n  get isCheckMateToWhite(): boolean {\n    return this.chessBase.isCheckMateToWhite;\n  }\n\n  get isCheckMateToBlack(): boolean {\n    return this.chessBase.isCheckMateToBlack;\n  }\n\n  get isWhiteResigned(): boolean {\n    return this.chessBase.isWhiteResigned;\n  }\n\n  get isBlackResigned(): boolean {\n    return this.chessBase.isBlackResigned;\n  }\n\n  get isExistsInfoToWhite(): boolean {\n    return this.isCheckToWhite || this.isCheckMateToWhite || this.isWhiteResigned;\n  }\n\n  get isExistsInfoToBlack(): boolean {\n    return this.isCheckToBlack || this.isCheckMateToBlack || this.isBlackResigned;\n  }\n\n  get infoToWhite(): string {\n    let _retVal = '';\n    \n    if (this.isCheckMateToWhite) {\n      _retVal = 'Checkmate!';\n    }\n    else if (this.isCheckToWhite) {\n      _retVal = 'Check!';\n    }\n    else if (this.isWhiteResigned) {\n      _retVal = 'Resigned!';\n    }\n\n    return _retVal;\n  }\n\n  get infoToBlack(): string {\n    let _retVal = '';\n    \n    if (this.isCheckMateToBlack) {\n      _retVal = 'Checkmate!';\n    }\n    else if (this.isCheckToBlack) {\n      _retVal = 'Check!';\n    }\n    else if (this.isBlackResigned) {\n      _retVal = 'Resigned!';\n    }\n\n    return _retVal;\n  }\n\n  get isGameEnded(): boolean {\n    // checkmate || resigning\n    return this.isCheckMateToWhite || this.isCheckMateToBlack || this.isWhiteResigned || this.isBlackResigned;\n  }\n\n  get isStarted(): boolean {\n    return this.isGameStarted;\n  }\n\n  get isWhiteResignDisabled(): boolean {\n    return !this.localGamers.includes('white');\n  }\n\n  get isBlackResignDisabled(): boolean {\n    return !this.localGamers.includes('black');\n  }\n\n  get isSinglePlayer(): boolean {\n    return this.isSinglePlayerGame;\n  }\n\n  set isSinglePlayer(value: boolean) {\n    if (this.isSinglePlayerGame != value){\n      this.isSinglePlayerGame = value;\n    }\n  }\n\n  get isMultiPlayer(): boolean {\n    return !this.isSinglePlayerGame;\n  }\n\n  get isPlayerModeSelectionDisabled(): boolean {\n    return this.isMultiPlayerGameCreated || this.isMultiplayerCreateOptionsDisabled;\n  }\n\n  get isMultiplayerJoinOptionsDisabled(): boolean {\n    return this.isMultiPlayerGameCreated;\n  }\n\n  get isMultiplayerCreateOptionsDisabled(): boolean {\n    return this.isJoinedAsGamer || this.isJoinedAsViewer;\n  }\n\n  get isJoinDisabled(): boolean {\n    return this.isJoinedAsGamer || this.isJoinedAsViewer;\n  }\n\n  get isViewerJoined(): boolean {\n    return this.isJoinedAsViewer;\n  }\n\n  get isRoomCreated(): boolean {\n    return this.isMultiPlayerRoomCreated;\n  }\n\n  get isBlackGamerJoined(): boolean {\n    return this.isRemoteBlackGamerJoined;\n  }\n\n  get isPromoteWhite(): boolean {\n    return this.chessBase.isPawnPromotionWhite;\n  }\n\n  get isPromoteBlack(): boolean {\n    return this.chessBase.isPawnPromotionBlack;\n  }\n\n  get isLoaderVisible(): boolean {\n    return this.chessBase.isLoaderVisible;\n  }\n\n  get isTestInProgress(): boolean {\n    return this.chessBase.isTestInProgress;\n  }\n\n  get blackPromotionList(): string[] {\n    return this.chessBase.blackPromotionList;\n  }\n\n  get whitePromotionList(): string[] {\n    return this.chessBase.whitePromotionList;\n  }\n\n  get isSaveDetailVisible(): boolean {\n    return this.isSaveGameEnabled;\n  }\n\n  get isLoadDetailVisible(): boolean {\n    return this.isLoadGameEnabled;\n  }\n\n  get isSaveAndLoadVisible(): boolean {\n    return !(this.isSaveDetailVisible || this.isLoadDetailVisible);\n  }\n\n  get isGameSelectedForLoad(): boolean {\n    return this.gameListSelectedItem > -1;\n  }\n\n  get selectedItemForLoad(): number {\n    return this.gameListSelectedItem;\n  }\n\n  ngOnInit(): void {\n  }\n  \n  @HostListener('window:beforeunload', ['$event'])\n  onBeforeUnload($event: any) {\n    this.ngOnDestroy();\n    $event.preventDefault(); \n    delete $event['returnValue'];\n  }\n\n  async ngOnDestroy() {\n    if (this.isMultiPlayer) {\n      this.msg = 'Disconnecting...';\n    }\n  }\n\n  onCellClick(x: number, y: number): void {\n    const isStepEnabled = (this.isStarted && this.isNextLocalGamer) || this.isSinglePlayer;\n\n    if (!(this.isPromoteWhite || this.isPromoteBlack || this.isTestInProgress || this.isGameEnded) && isStepEnabled) {\n      if (this.isClickedFrom) {\n        this.setFrom(x, y);\n      }\n      else {\n        this.setTo(x, y);\n      }\n    }\n  }\n\n  onPromotionClick(name: string, i: number): void {\n    const color = (this.isPromoteWhite) ? 'white' : 'black';\n\n    if (this.isMultiPlayer && this.localGamers.includes(color)) {\n      const roomName: string = (color === 'white') ? this.roomNameForCreate : this.roomNameForJoin;\n      this.socket.emit('convert-pawn', roomName, this.PINForJoin, name, color, this.step);\n    }\n    \n    this.chessBase.convertPawn(name, color, this.step, i);\n  }\n\n  onResignClick(color: string): void {\n    this.chessBase.resign(color);\n  }\n\n  onCreateGameClick(): void {\n    if (!this.isMultiPlayerGameCreated && this.roomNameForCreate) {\n      this.isMultiPlayerGameCreated = true;\n      const i = this.localGamers.indexOf('black');\n      this.localGamers.splice(i, 1);\n      this.socket.emit('start-game', this.roomNameForCreate);\n    }\n  }\n\n  onJoinAsGamerClick(): void {\n    if (!(this.isJoinedAsGamer || this.isJoinedAsViewer) && this.roomNameForJoin && this.PINForJoin && this.PINForJoin.length === 4) {\n      this.isJoinedAsGamer = true;\n      this.joinMsg = '';\n      const i = this.localGamers.indexOf('white');\n      this.localGamers.splice(i, 1);\n      this.socket.emit('join', this.roomNameForJoin, this.PINForJoin, false);\n    }\n  }\n\n  onJoinAsViewerClick(): void {\n    if (!(this.isJoinedAsGamer || this.isJoinedAsViewer) && this.roomNameForJoin && this.PINForJoin && this.PINForJoin.length === 4) {\n      this.isJoinedAsViewer = true;\n      this.joinMsg = '';\n      this.localGamers = [];\n      this.socket.emit('join', this.roomNameForJoin, this.PINForJoin, true);\n    }\n  }\n\n  onSendMessageClick(): void {\n    const roomName: string = (this.roomNameForCreate) ? this.roomNameForCreate : this.roomNameForJoin;\n    this.socket.emit('message', roomName, this.PINForJoin, this.colorOfLocalGamer.toLowerCaseFirstLetter(), this.nameForChat, this.socketId, this.messageForChat);\n    this.messageForChat = '';\n  }\n\n  onSaveGameClick(): void {\n    this.nameForSave = '';\n    this.isSaveGameEnabled = true;\n  }\n\n  onLoadGameClick(): void {\n    this.gameList = this._localStorage.getList();\n    this.gameListSelectedItem = -1;\n    this.isLoadGameEnabled = true;\n  }\n\n  onSaveClick(): void {\n    // save\n    const data = { \n      board: this.chessBase.board, \n      steps: this.steps, \n      next: this.colorOfNext, \n      isWhiteResigned: this.isWhiteResigned, \n      isBlackResigned: this.isBlackResigned,\n      date: new Date().toJSON().slice(0,16).replace('T', ' ')\n    };\n    this._localStorage.setItem(this.nameForSave, data);\n    this.isSaveGameEnabled = false;\n  }\n\n  onLoadClick(): void {\n    const name = this.gameList[this.gameListSelectedItem].name;\n    const data = this._localStorage.loadItem(name);\n\n    if (data) {\n      this.onSyncronize(data.board, data.steps, data.next, data.isWhiteResigned, data.isBlackResigned);\n\n      if (this.isMultiPlayer) {\n        this.isLocaleLoaded = true;\n        const roomName: string = (this.roomNameForCreate) ? this.roomNameForCreate : this.roomNameForJoin;\n        this.socket.emit('board-loaded', roomName, this.PINForJoin, \n              this.chessBase.board, this.steps, this.colorOfNext, this.isWhiteResigned, this.isBlackResigned);\n      }\n    }\n\n    this.isLoadGameEnabled = false;\n  }\n\n  onSelectGameClick(i: number): void {\n    this.gameListSelectedItem = i;\n  }\n\n  gameModeChange(e: Event): void {\n    this.isSinglePlayerGame = ((<HTMLInputElement> e.target).id === 'singlePlayer');\n  }\n\n  isCellWhite(x: number, y: number): boolean {\n    // board colorize\n    return (x % 2 === 0 && y % 2 === 0) || (x % 2 !== 0 && y % 2 !== 0);\n  }\n\n  colorOfFigure(x: number, y: number): string {\n    const fig = this.getFigure(x, y);\n    \n    return (fig) ? fig.color : \"\";\n  }\n\n  classNameOfFigure(x: number, y: number): string {\n    const fig = this.getFigure(x, y);\n    \n    return (fig) ? fig.color + \" \" + fig.name : \"\";\n  }\n\n  classNameOfPromotion(name: string, color: string): string {\n    return color + \" \" + name;\n  }\n\n  private clearStep(): void {\n    this.msg = 'This step is illegal! ' + this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    this.step = { from: null, to: null };\n    this.isClickedFrom = !this.isClickedFrom;\n  }\n\n  private onStep(eventArgs: any): void {\n    // TODO: add step to list\n\n    if (eventArgs && eventArgs.state === 'pawn_promotion') {\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next. Convert the pawn to another!';\n    }\n    else {\n      this.step = { from: null, to: null };\n      this.isClickedFrom = !this.isClickedFrom;\n      this.isWhiteNext = !this.isWhiteNext;\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n\n      // test check, checkmate, dead position, stalemate\n      this.chessBase.processCombinatedTests(this.colorOfNext);\n    }\n\n    this.setStepNotation(eventArgs);\n\n    if (eventArgs && this.isMultiPlayer && this.localGamers.includes(eventArgs.color)){\n      const roomName: string = (eventArgs.color === 'white') ? this.roomNameForCreate : this.roomNameForJoin;\n      this.socket.emit('step', roomName, this.PINForJoin, eventArgs);\n    }\n  }\n\n  private setStepNotation(eventArgs: any): void {\n    if (eventArgs) {\n      if (eventArgs.color === 'white') {\n        // new notation\n        const item: IStepNotation = { \n          white: new StepDetail(\n            eventArgs.step,\n            eventArgs.additionalStep ? eventArgs.additionalStep : null,\n            eventArgs.fig,\n            eventArgs.strike,\n            this.isCheckToBlack,\n            this.isCheckMateToBlack,\n            this.getShowFromX(eventArgs.fig, 'white', eventArgs.step),\n            this.getShowFromY(eventArgs.fig, 'white', eventArgs.step)\n            ), \n          black: null };\n        \n        this.steps.push(item);\n      }\n      else {\n        // last notation\n        const item = this.steps[this.steps.length - 1];\n        item.black = new StepDetail(\n          eventArgs.step,\n          eventArgs.additionalStep ? eventArgs.additionalStep : null,\n          eventArgs.fig,\n          eventArgs.strike,\n          this.isCheckToWhite,\n          this.isCheckMateToWhite,\n          this.getShowFromX(eventArgs.fig, 'black', eventArgs.step),\n          this.getShowFromY(eventArgs.fig, 'black', eventArgs.step)\n        );\n      }\n    }\n    else {\n      const item = this.steps[this.steps.length - 1];\n      if (this.isWhiteNext) {\n        // set black\n        item.black!.isCheck = this.isCheckToBlack;\n        item.black!.isCheckMate = this.isCheckMateToBlack;\n      }\n      else {\n        // set white\n        item.white!.isCheck = this.isCheckToWhite;\n        item.white!.isCheckMate = this.isCheckMateToWhite;\n      }\n    }\n  }\n\n  private getShowFromX(figure: string, color: string, step: IStep): boolean {\n    let _retVal = false;\n\n    if (figure === 'rook') {\n      if (step.from?.y === step.to?.y) {\n        for (let i = 0; i < 8; i++) {\n          if (i !== step.from?.x && i !== step.to?.x) {\n            const fig = this.chessBase.getFigure(i, step.from!.y);\n\n            if (fig && fig.name === 'rook' && fig.color === color) {\n              _retVal = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return _retVal;\n  }\n\n  private getShowFromY(figure: string, color: string, step: IStep): boolean {\n    let _retVal = false;\n\n    if (figure === 'rook') {\n      if (step.from?.x === step.to?.x) {\n        for (let i = 0; i < 8; i++) {\n          if (i !== step.from?.y && i !== step.to?.y) {\n            const fig = this.chessBase.getFigure(step.from!.x, i);\n\n            if (fig && fig.name === 'rook' && fig.color === color) {\n              _retVal = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return _retVal;\n  }\n\n  private onSyncronize(board: ICell[], steps: IStepNotation[], colorOfNext: string, isWhiteResigned: boolean, isBlackResigned: boolean): void {\n    this.syncronizeBoard(board);\n    this.syncronizeSteps(steps);\n    this.isWhiteNext = (colorOfNext === 'white');\n\n    if (isWhiteResigned || isBlackResigned) {\n      const color = (isWhiteResigned)? 'white': 'black';\n      this.onResignClick(color);\n    }\n    else {\n      this.chessBase.processCombinatedTests(this.colorOfNext);\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    }\n  }\n\n  private onPromotion(): void {\n    this.onStep(null);\n  }\n\n  private onCheckMate(): void {\n    this.msg = 'Checkmate. ' + this.colorOfWinner.toUpperCaseFirstLetter() + ' won!';\n  }\n\n  private onResign(): void {\n    const resignedColor = (this.isWhiteResigned) ? 'white' : 'black';\n\n    this.msg = resignedColor.toUpperCaseFirstLetter() + ' resigned. ' + this.colorOfWinner.toUpperCaseFirstLetter() + ' won!';\n  }\n\n  private getFigure(x: number, y: number): IFigure | null {\n    return this.chessBase.getFigure(x, y);\n  }\n\n  private setFrom(x: number, y: number): void {\n    const fig = this.getFigure(x, y);\n\n    if (fig && fig.color === this.colorOfNext) {\n      if (!this.isStarted) {\n        this.isGameStarted = true;\n      }\n      this.isClickedFrom = !this.isClickedFrom;\n      this.step.from = { x: x, y: y};\n      this.msg = this.colorOfNext.toUpperCaseFirstLetter() + ': Click the next cell!';\n    }\n    else {\n      this.msg = 'This step is illegal! ' + this.colorOfNext.toUpperCaseFirstLetter() + ' is next.';\n    }\n  }\n\n  private setTo(x: number, y: number): void {\n    this.step.to = { x: x, y: y};\n    const chessBase = ChessBase.instance;\n    chessBase.stepAwayIfPossible(this.step);\n  }\n\n  private syncronizeBoard(board: ICell[]): void {\n    this.chessBase.board = [];\n    for (let i = 0; i < board.length; i++) {\n      const element = board[i];\n      if (element.figure?.name) {\n        ChessFactory.createFigure(element.figure.name, element.figure.color, element.x, element.y);\n      }\n    }\n  }\n\n  private syncronizeSteps(steps: IStepNotation[]): void {\n    this.steps = [];\n    for (let i = 0; i < steps.length; i++) {\n      const element = steps[i];\n      const item: IStepNotation = { \n        white: new StepDetail(\n          element.white.step,\n          element.white.additionalStep,\n          element.white.fig,\n          element.white.isStrike,\n          element.white.isCheck,\n          element.white.isCheckMate,\n          element.white.isShowFromX,\n          element.white.isShowFromY\n          ), \n        black: null };\n\n      if (element.black) {\n        item.black = new StepDetail(\n          element.black.step,\n          element.black.additionalStep,\n          element.black.fig,\n          element.black.isStrike,\n          element.black.isCheck,\n          element.black.isCheckMate,\n          element.black.isShowFromX,\n          element.black.isShowFromY\n        );\n      }\n      \n      this.steps.push(item);\n    }\n  }\n\n  private fillBoard(): void {\n    //init white figures\n    for (let i = 0; i < this.x.length; i++) {\n      const element = this.x[i];\n      // row 2 - Pawn\n      ChessFactory.createFigure(\"pawn\", \"white\", i, (8 - 2));\n\n      // row 1\n      if (element === 'a' || element === 'h') {\n        // Rook\n        ChessFactory.createFigure(\"rook\", \"white\", i, (8 - 1));\n      }\n      else if (element === 'b' || element === 'g') {\n        // Knight\n        ChessFactory.createFigure(\"knight\", \"white\", i, (8 - 1));\n      }\n      else if (element === 'c' || element === 'f') {\n        // Bishop\n        ChessFactory.createFigure(\"bishop\", \"white\", i, (8 - 1));\n      }\n      else if (element === 'd') {\n        // Queen\n        ChessFactory.createFigure(\"queen\", \"white\", i, (8 - 1));\n      }\n      else if (element === 'e') {\n        // King\n        ChessFactory.createFigure(\"king\", \"white\", i, (8 - 1));\n      }\n    }\n\n    \n    //init black figures\n    for (let i = 0; i < this.x.length; i++) {\n      const element = this.x[i];\n      // row 7 - Pawn\n      ChessFactory.createFigure(\"pawn\", \"black\", i, (8 - 7));\n\n      // row 8\n      if (element === 'a' || element === 'h') {\n        // Rook\n        ChessFactory.createFigure(\"rook\", \"black\", i, (8 - 8));\n      }\n      else if (element === 'b' || element === 'g') {\n        // Knight\n        ChessFactory.createFigure(\"knight\", \"black\", i, (8 - 8));\n      }\n      else if (element === 'c' || element === 'f') {\n        // Bishop\n        ChessFactory.createFigure(\"bishop\", \"black\", i, (8 - 8));\n      }\n      else if (element === 'd') {\n        // Queen\n        ChessFactory.createFigure(\"queen\", \"black\", i, (8 - 8));\n      }\n      else if (element === 'e') {\n        // King\n        ChessFactory.createFigure(\"king\", \"black\", i, (8 - 8));\n      }\n    }\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-12 col-xl-6 board-div\">\n            <div class=\"check-info\">\n                &nbsp;\n                <span *ngIf=\"isExistsInfoToBlack\">{{ infoToBlack }}</span>\n                <button type=\"button\" class=\"btn btn-primary btn-sm btn-resign\" \n                    (click)=\"onResignClick('black')\" [disabled]=\"isGameEnded || isBlackResignDisabled\">\n                    Resign\n                </button>\n            </div>\n\n            <div class=\"promotion-list\" *ngIf=\"isPromoteWhite\">\n                <span class=\"chess-icons\" *ngFor=\"let name of whitePromotionList; let i=index;\" \n                    [ngClass]=\"classNameOfPromotion(name, 'white')\"\n                    (click)=\"onPromotionClick(name, i)\"></span>\n            </div>\n\n            <table>\n                <tr>\n                    <th></th>\n                    <th *ngFor=\"let col of x\">\n                        {{ col }}\n                    </th>\n                    <th>\n                        <div class=\"loader\" *ngIf=\"isLoaderVisible\"></div>\n                    </th>\n                </tr>\n                <tr *ngFor=\"let row of y; let i = index;\">\n                    <td>{{ row }}</td>\n                    <td *ngFor=\"let td of x; let j = index;\" \n                            [ngClass]=\"{'white': isCellWhite(j, i), 'black': !isCellWhite(j, i) }\"\n                            (click)=\"onCellClick(j, i)\">\n                        <span class=\"chess-icons\" [ngClass]=\"classNameOfFigure(j, i)\"></span>\n                    </td>\n                    <td>{{ row }}</td>\n                </tr>\n                <tr>\n                    <td></td>\n                    <td *ngFor=\"let col of x\">\n                        {{ col }}\n                    </td>\n                    <td></td>\n                </tr>\n            </table>\n\n            <div class=\"promotion-list promotion-black\" *ngIf=\"isPromoteBlack\">\n                <span class=\"chess-icons\" *ngFor=\"let name of blackPromotionList; let i=index;\" \n                    [ngClass]=\"classNameOfPromotion(name, 'black')\"\n                    (click)=\"onPromotionClick(name, i)\"></span>\n            </div>\n\n            <div class=\"check-info\">\n                &nbsp;\n                <span *ngIf=\"isExistsInfoToWhite\">{{ infoToWhite }}</span>\n                <button type=\"button\" class=\"btn btn-primary btn-sm btn-resign\" \n                    (click)=\"onResignClick('white')\" [disabled]=\"isGameEnded || isWhiteResignDisabled\">\n                    Resign\n                </button>\n            </div>\n\n            <p>{{ msg}}</p>\n        </div>\n\n        <div class=\"col-12 col-md-6\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <div class=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\">\n                        <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"singlePlayer\" autocomplete=\"off\" checked \n                            (change)=\"gameModeChange($event)\" [disabled]=\"isStarted || isPlayerModeSelectionDisabled\">\n                        <label class=\"btn btn-outline-primary\" for=\"singlePlayer\">Single player</label>\n                      \n                        <input type=\"radio\" class=\"btn-check\" name=\"btnradio\" id=\"multiPlayer\" autocomplete=\"off\" \n                            (change)=\"gameModeChange($event)\" [disabled]=\"isStarted || isPlayerModeSelectionDisabled\">\n                        <label class=\"btn btn-outline-primary\" for=\"multiPlayer\">Multi player</label>\n                    </div>\n\n                    <div class=\"gamer-info\">\n                        <span *ngIf=\"isStarted && isSinglePlayer\">White, Black</span>\n                        <span>{{ colorOfLocalGamer }}</span>\n                        <span *ngIf=\"isViewerJoined\">Viewer</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"isMultiPlayer\">\n                <div class=\"col\">\n                    <div class=\"card\" *ngIf=\"!isMultiplayerCreateOptionsDisabled\">\n                        <div class=\"card-body\">\n                            <div class=\"input-group\" *ngIf=\"!isRoomCreated\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Name of Room\" aria-label=\"Room\" \n                                    aria-describedby=\"button-create\" [(ngModel)]=\"roomNameForCreate\" />\n                                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-create\"\n                                    (click)=\"onCreateGameClick()\" >\n                                    Create Game\n                                </button>\n                            </div>   \n                            <span>\n                                Local gamer: <b>white</b>, \n                                Remote gamer: <b>black</b> \n                                - \n                                <span style=\"color: red;\" *ngIf=\"!isBlackGamerJoined\">offline</span>\n                                <span style=\"color: green;\" *ngIf=\"isBlackGamerJoined\">online</span>\n                            </span>\n                            <br />\n                            <span class=\"multiplayer-info\" *ngIf=\"isRoomCreated\">\n                                Room: {{ roomNameForCreate }}, PIN: {{ PINForJoin }}\n                            </span>                         \n                        </div>\n                    </div>\n\n                    <div class=\"card\" *ngIf=\"!isMultiplayerJoinOptionsDisabled\">\n                        <div class=\"card-body\">\n                            <div *ngIf=\"!(isStarted || isJoinDisabled)\">\n                                <div class=\"input-group\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Name of Room\" [(ngModel)]=\"roomNameForJoin\" />\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"PIN for Room\" [(ngModel)]=\"PINForJoin\" mask=\"0000\" />\n                                </div>\n                                <button class=\"btn btn-outline-secondary btn-join\" type=\"button\" id=\"button-join-gamer\"\n                                    (click)=\"onJoinAsGamerClick()\" >\n                                    Join as Gamer\n                                </button>\n                                <button class=\"btn btn-outline-secondary btn-join\" type=\"button\" id=\"button-join-viwer\"\n                                    (click)=\"onJoinAsViewerClick()\" >\n                                    Join as Viewer\n                                </button>\n                            </div>\n\n                            <div *ngIf=\"isStarted || isViewerJoined\">\n                                <span>\n                                    Local gamer: <b>{{ isViewerJoined ? '-': 'black' }}</b>, \n                                    Remote gamer: <b>{{ isViewerJoined ? 'white, black': 'white' }}</b> \n                                </span>\n                                <br />\n                                <span *ngIf=\"!isStarted && isViewerJoined\" style=\"color: red;\">\n                                    We are waiting for the black player to join...\n                                </span>\n                                <br />\n                                <span class=\"multiplayer-info\">\n                                    Room: {{ roomNameForJoin }}, PIN: {{ PINForJoin }}\n                                </span>\n                            </div>\n\n                            <span *ngIf=\"joinMsg\" style=\"color: red;\">\n                                {{ joinMsg }}\n                            </span>\n                        </div>\n                      </div>\n                </div>\n            </div>\n\n            <div class=\"row\" *ngIf=\"isStarted\">\n                <div class=\"col-12 col-md-6\">\n                    <div class=\"card\" *ngIf=\"!isLoadDetailVisible\">\n                        <div class=\"card-body steps\">\n                            <h5 class=\"card-title\">Step notation</h5>\n                            <ol>\n                                <li *ngFor=\"let step of steps; let j = index;\">\n                                    <span>\n                                        <span class=\"chess-icons s16\" [ngClass]=\"'white ' + step.white.figure\" *ngIf=\"step.white.figure\"></span>\n                                        {{step.white.notation}}\n                                    </span>\n                                    <span style=\"margin-left: 20px;\" *ngIf=\"step.black\">\n                                        <span class=\"chess-icons s16\" [ngClass]=\"'black ' + step.black?.figure\" *ngIf=\"step.black?.figure\"></span>\n                                        {{step.black?.notation}}\n                                    </span>\n                                </li>\n                            </ol>\n                        </div>\n                    </div>\n\n                    <div class=\"card\">\n                        <div class=\"card-body\">\n                            <div *ngIf=\"isSaveAndLoadVisible\">\n                                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-load-game\"\n                                    (click)=\"onLoadGameClick()\" style=\"margin-right: 15px;\">\n                                    Load\n                                </button>\n                                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-save-game\"\n                                    (click)=\"onSaveGameClick()\" >\n                                    Save\n                                </button>\n                            </div>\n\n                            <div *ngIf=\"isSaveDetailVisible\">\n                                <div class=\"input-group\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Name of Game\" aria-label=\"Name\" \n                                        aria-describedby=\"button-save\" [(ngModel)]=\"nameForSave\" />\n                                    <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-save\"\n                                        (click)=\"onSaveClick()\" [disabled]=\"!nameForSave\" >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div *ngIf=\"isLoadDetailVisible\">\n                                <div class=\"game-list\">\n                                    <div class=\"list-group\">\n                                        <button type=\"button\" class=\"list-group-item list-group-item-action\"\n                                            *ngFor=\"let item of gameList; let i = index;\"\n                                            [ngClass]=\"{ 'active': i === selectedItemForLoad}\"\n                                            (click)=\"onSelectGameClick(i)\">\n                                          {{item.name}} <span class=\"bold\"> - {{item.date}}</span>\n                                        </button>\n                                    </div>\n                                </div>\n                                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-load\"\n                                    (click)=\"onLoadClick()\" [disabled]=\"!isGameSelectedForLoad\" >\n                                    Load\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-12 col-md-6\">\n                    <div class=\"card\" *ngIf=\"isMultiPlayer\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title\">Chat</h5>\n                            <div class=\"input-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Name for Chat\" [(ngModel)]=\"nameForChat\" />\n                            </div>\n                            <div class=\"chat\">\n                                <span class=\"chat-message\" *ngFor=\"let msg of chatMessages;\"\n                                    [ngClass]=\"{'left': msg.isOwnMessage }\">\n                                    <span class=\"chess-icons s16\" [ngClass]=\"msg.player + ' king'\" *ngIf=\"msg.player\"></span>\n                                    <span class=\"viewer-icon\" *ngIf=\"!msg.player\">[viewer]</span>\n                                    <span class=\"name\">{{msg.name}}</span>\n                                    <div class=\"msg\">{{msg.message}}</div>\n                                </span>\n                            </div>\n                            <div class=\"input-group\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"Message\" aria-label=\"Message\" \n                                    aria-describedby=\"button-send-message\" [(ngModel)]=\"messageForChat\" />\n                                <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-send-message\"\n                                    (click)=\"onSendMessageClick()\" >\n                                    Send\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}