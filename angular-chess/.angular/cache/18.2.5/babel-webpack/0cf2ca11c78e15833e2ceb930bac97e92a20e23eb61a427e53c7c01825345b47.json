{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LocalStorageService {\n  constructor() {\n    this._localStorage = localStorage;\n  }\n  setItem(name, data) {\n    if (data) {\n      const jsonData = JSON.stringify(data);\n      this._localStorage.setItem('angularchess_' + name, jsonData);\n    }\n  }\n  loadItem(name) {\n    let data = undefined;\n    const item = this._localStorage.getItem('angularchess_' + name);\n    if (item) {\n      data = JSON.parse(item);\n    }\n    return data;\n  }\n  getList() {\n    let _retVal = [];\n    for (var i = 0; i < this._localStorage.length; i++) {\n      const element = this._localStorage.key(i);\n      if (element.indexOf('angularchess_') > -1) {\n        const name = element.replace('angularchess_', '');\n        const item = this.loadItem(name);\n        _retVal.push({\n          name: name,\n          date: item.date\n        });\n      }\n    }\n    return _retVal;\n  }\n  static {\n    this.ɵfac = function LocalStorageService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LocalStorageService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LocalStorageService,\n      factory: LocalStorageService.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["LocalStorageService","constructor","_localStorage","localStorage","setItem","name","data","jsonData","JSON","stringify","loadItem","undefined","item","getItem","parse","getList","_retVal","i","length","element","key","indexOf","replace","push","date","factory","ɵfac"],"sources":["/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/src/app/chess/localstorage.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class LocalStorageService {\n    private _localStorage: Storage;\n\n    constructor() {\n        this._localStorage = localStorage;\n    }\n\n    setItem(name: string, data: any): void {\n        if (data) {\n            const jsonData = JSON.stringify(data);\n            this._localStorage.setItem('angularchess_' + name, jsonData);\n        }\n    }\n\n    loadItem(name: string): any {\n        let data = undefined;\n        const item = this._localStorage.getItem('angularchess_' + name);\n\n        if (item) {\n            data = JSON.parse(item);\n        }\n\n        return data;\n    }\n\n    getList(): IGameListItem[] {\n        let _retVal: IGameListItem[] = [];\n\n        for (var i = 0; i < this._localStorage.length; i++) {\n            const element = this._localStorage.key(i);\n            \n            if (element!.indexOf('angularchess_') > -1) {\n                const name = element!.replace('angularchess_', '');\n                const item = this.loadItem(name);\n                _retVal.push({\n                    name: name,\n                    date: item.date\n                });\n            }\n        }\n\n        return _retVal;\n    }\n}"],"mappings":";AAGA,OAAM,MAAOA,mBAAmB;EAG5BC,YAAA;IACI,IAAI,CAACC,aAAa,GAAGC,YAAY;EACrC;EAEAC,OAAOA,CAACC,IAAY,EAAEC,IAAS;IAC3B,IAAIA,IAAI,EAAE;MACN,MAAMC,QAAQ,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;MACrC,IAAI,CAACJ,aAAa,CAACE,OAAO,CAAC,eAAe,GAAGC,IAAI,EAAEE,QAAQ,CAAC;IAChE;EACJ;EAEAG,QAAQA,CAACL,IAAY;IACjB,IAAIC,IAAI,GAAGK,SAAS;IACpB,MAAMC,IAAI,GAAG,IAAI,CAACV,aAAa,CAACW,OAAO,CAAC,eAAe,GAAGR,IAAI,CAAC;IAE/D,IAAIO,IAAI,EAAE;MACNN,IAAI,GAAGE,IAAI,CAACM,KAAK,CAACF,IAAI,CAAC;IAC3B;IAEA,OAAON,IAAI;EACf;EAEAS,OAAOA,CAAA;IACH,IAAIC,OAAO,GAAoB,EAAE;IAEjC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACf,aAAa,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;MAChD,MAAME,OAAO,GAAG,IAAI,CAACjB,aAAa,CAACkB,GAAG,CAACH,CAAC,CAAC;MAEzC,IAAIE,OAAQ,CAACE,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE;QACxC,MAAMhB,IAAI,GAAGc,OAAQ,CAACG,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;QAClD,MAAMV,IAAI,GAAG,IAAI,CAACF,QAAQ,CAACL,IAAI,CAAC;QAChCW,OAAO,CAACO,IAAI,CAAC;UACTlB,IAAI,EAAEA,IAAI;UACVmB,IAAI,EAAEZ,IAAI,CAACY;SACd,CAAC;MACN;IACJ;IAEA,OAAOR,OAAO;EAClB;;;uCA1CShB,mBAAmB;IAAA;EAAA;;;aAAnBA,mBAAmB;MAAAyB,OAAA,EAAnBzB,mBAAmB,CAAA0B;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}