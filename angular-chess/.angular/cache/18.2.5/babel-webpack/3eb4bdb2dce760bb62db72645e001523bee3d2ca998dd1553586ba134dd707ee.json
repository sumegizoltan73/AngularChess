{"ast":null,"code":"import { Figure } from \"./chess-figure\";\nexport class FigureKnight extends Figure {\n  constructor(color) {\n    super('knight', color, 2, 2);\n  }\n  isStepPossible(step) {\n    let _retVal = false;\n    if (this.isCoordsNotEquals(step)) {\n      if (this.isKnightStep(step)) {\n        if (this.isCellToNotBlockedBySameFigure(step)) {\n          if (this.isCellToNotBlockedByEnemyKing(step)) {\n            _retVal = true;\n          }\n        }\n      }\n    }\n    return _retVal;\n  }\n  isKnightStep(step) {\n    let _retVal = false;\n    if (Math.abs(step.to.x - step.from.x) === 2 && Math.abs(step.to.y - step.from.y) === 1 || Math.abs(step.to.x - step.from.x) === 1 && Math.abs(step.to.y - step.from.y) === 2) {\n      _retVal = true;\n    }\n    return _retVal;\n  }\n}","map":{"version":3,"names":["Figure","FigureKnight","constructor","color","isStepPossible","step","_retVal","isCoordsNotEquals","isKnightStep","isCellToNotBlockedBySameFigure","isCellToNotBlockedByEnemyKing","Math","abs","to","x","from","y"],"sources":["/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/src/app/chess/chess-figure-knight.ts"],"sourcesContent":["import { Figure } from \"./chess-figure\";\n\nexport class FigureKnight extends Figure implements IFigure {\n    \n    constructor(color: string){\n        super('knight', color, 2, 2);\n    }\n\n    isStepPossible(step: IStep): boolean {\n        let _retVal = false;\n        \n        if (this.isCoordsNotEquals(step)) {\n            if (this.isKnightStep(step)) {\n                if (this.isCellToNotBlockedBySameFigure(step)) {\n                    if (this.isCellToNotBlockedByEnemyKing(step)) { \n                        _retVal = true;\n                    }\n                }\n            }\n        }\n\n        return _retVal;\n    }\n\n    private isKnightStep(step: IStep): boolean {\n        let _retVal = false;\n\n        if ((Math.abs(step.to!.x - step.from!.x) === 2 && Math.abs(step.to!.y - step.from!.y) === 1 )\n                || (Math.abs(step.to!.x - step.from!.x) === 1 && Math.abs(step.to!.y - step.from!.y) === 2 )) {\n            _retVal = true;\n        }\n\n        return _retVal;\n    }\n\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,OAAM,MAAOC,YAAa,SAAQD,MAAM;EAEpCE,YAAYC,KAAa;IACrB,KAAK,CAAC,QAAQ,EAAEA,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EAChC;EAEAC,cAAcA,CAACC,IAAW;IACtB,IAAIC,OAAO,GAAG,KAAK;IAEnB,IAAI,IAAI,CAACC,iBAAiB,CAACF,IAAI,CAAC,EAAE;MAC9B,IAAI,IAAI,CAACG,YAAY,CAACH,IAAI,CAAC,EAAE;QACzB,IAAI,IAAI,CAACI,8BAA8B,CAACJ,IAAI,CAAC,EAAE;UAC3C,IAAI,IAAI,CAACK,6BAA6B,CAACL,IAAI,CAAC,EAAE;YAC1CC,OAAO,GAAG,IAAI;UAClB;QACJ;MACJ;IACJ;IAEA,OAAOA,OAAO;EAClB;EAEQE,YAAYA,CAACH,IAAW;IAC5B,IAAIC,OAAO,GAAG,KAAK;IAEnB,IAAKK,IAAI,CAACC,GAAG,CAACP,IAAI,CAACQ,EAAG,CAACC,CAAC,GAAGT,IAAI,CAACU,IAAK,CAACD,CAAC,CAAC,KAAK,CAAC,IAAIH,IAAI,CAACC,GAAG,CAACP,IAAI,CAACQ,EAAG,CAACG,CAAC,GAAGX,IAAI,CAACU,IAAK,CAACC,CAAC,CAAC,KAAK,CAAC,IAC/EL,IAAI,CAACC,GAAG,CAACP,IAAI,CAACQ,EAAG,CAACC,CAAC,GAAGT,IAAI,CAACU,IAAK,CAACD,CAAC,CAAC,KAAK,CAAC,IAAIH,IAAI,CAACC,GAAG,CAACP,IAAI,CAACQ,EAAG,CAACG,CAAC,GAAGX,IAAI,CAACU,IAAK,CAACC,CAAC,CAAC,KAAK,CAAG,EAAE;MAClGV,OAAO,GAAG,IAAI;IAClB;IAEA,OAAOA,OAAO;EAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}