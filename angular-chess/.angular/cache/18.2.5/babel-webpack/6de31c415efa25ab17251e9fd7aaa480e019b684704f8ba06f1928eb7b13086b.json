{"ast":null,"code":"import { ChessBase } from './chess-base.';\nimport { FigurePawn } from './chess-figure-pawn';\nimport { FigureRook } from './chess-figure-rook';\nimport { FigureKnight } from './chess-figure-knight';\nimport { FigureBishop } from './chess-figure-bishop';\nimport { FigureQueen } from './chess-figure-queen';\nimport { FigureKing } from './chess-figure-king';\nexport class ChessFactory {\n  static createFigure(type, color, x, y) {\n    let fig = null;\n    const chessBase = ChessBase.instance;\n    switch (type) {\n      case 'rook':\n        fig = new FigureRook(color);\n        break;\n      case 'knight':\n        fig = new FigureKnight(color);\n        break;\n      case 'bishop':\n        fig = new FigureBishop(color);\n        break;\n      case 'queen':\n        fig = new FigureQueen(color);\n        break;\n      case 'king':\n        fig = new FigureKing(color);\n        break;\n      default:\n        fig = new FigurePawn(color);\n        break;\n    }\n    chessBase.board.push({\n      x: x,\n      y: y,\n      figure: fig\n    });\n  }\n}","map":{"version":3,"names":["ChessBase","FigurePawn","FigureRook","FigureKnight","FigureBishop","FigureQueen","FigureKing","ChessFactory","createFigure","type","color","x","y","fig","chessBase","instance","board","push","figure"],"sources":["/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/src/app/chess/chess.factory.ts"],"sourcesContent":["import { ChessBase } from './chess-base.';\nimport { FigurePawn } from './chess-figure-pawn';\nimport { FigureRook } from './chess-figure-rook';\nimport { FigureKnight } from './chess-figure-knight';\nimport { FigureBishop } from './chess-figure-bishop';\nimport { FigureQueen } from './chess-figure-queen';\nimport { FigureKing } from './chess-figure-king';\n\nexport class ChessFactory {\n    static createFigure(type: string, color: string, x: number, y: number): void {\n        let fig: IFigure | null = null;\n        const chessBase = ChessBase.instance;\n\n        switch (type) {\n            case 'rook':\n                fig = new FigureRook(color);\n                break;\n\n            case 'knight':\n                fig = new FigureKnight(color);\n                break;\n\n            case 'bishop':\n                fig = new FigureBishop(color);\n                break;\n\n            case 'queen':\n                fig = new FigureQueen(color);\n                break;\n\n            case 'king':\n                fig = new FigureKing(color);\n                break;\n        \n            default:\n                fig = new FigurePawn(color);\n                break;\n        }\n\n        chessBase.board.push({\n            x: x,\n            y: y,\n            figure: fig\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,OAAM,MAAOC,YAAY;EACrB,OAAOC,YAAYA,CAACC,IAAY,EAAEC,KAAa,EAAEC,CAAS,EAAEC,CAAS;IACjE,IAAIC,GAAG,GAAmB,IAAI;IAC9B,MAAMC,SAAS,GAAGd,SAAS,CAACe,QAAQ;IAEpC,QAAQN,IAAI;MACR,KAAK,MAAM;QACPI,GAAG,GAAG,IAAIX,UAAU,CAACQ,KAAK,CAAC;QAC3B;MAEJ,KAAK,QAAQ;QACTG,GAAG,GAAG,IAAIV,YAAY,CAACO,KAAK,CAAC;QAC7B;MAEJ,KAAK,QAAQ;QACTG,GAAG,GAAG,IAAIT,YAAY,CAACM,KAAK,CAAC;QAC7B;MAEJ,KAAK,OAAO;QACRG,GAAG,GAAG,IAAIR,WAAW,CAACK,KAAK,CAAC;QAC5B;MAEJ,KAAK,MAAM;QACPG,GAAG,GAAG,IAAIP,UAAU,CAACI,KAAK,CAAC;QAC3B;MAEJ;QACIG,GAAG,GAAG,IAAIZ,UAAU,CAACS,KAAK,CAAC;QAC3B;IACR;IAEAI,SAAS,CAACE,KAAK,CAACC,IAAI,CAAC;MACjBN,CAAC,EAAEA,CAAC;MACJC,CAAC,EAAEA,CAAC;MACJM,MAAM,EAAEL;KACX,CAAC;EACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}