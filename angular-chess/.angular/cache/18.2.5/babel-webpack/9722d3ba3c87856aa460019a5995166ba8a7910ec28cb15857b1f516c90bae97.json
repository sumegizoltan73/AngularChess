{"ast":null,"code":"import { Figure } from \"./chess-figure\";\nexport class FigureQueen extends Figure {\n  constructor(color) {\n    super('queen', color, 8, 8);\n  }\n  isStepPossible(step) {\n    let _retVal = false;\n    if (this.isCoordsNotEquals(step)) {\n      if (this.isLinearStep(step) || this.isDiagonalStep(step)) {\n        if (this.isStepNotBlocked(step)) {\n          _retVal = true;\n        }\n      }\n    }\n    return _retVal;\n  }\n}","map":{"version":3,"names":["Figure","FigureQueen","constructor","color","isStepPossible","step","_retVal","isCoordsNotEquals","isLinearStep","isDiagonalStep","isStepNotBlocked"],"sources":["/Users/sumegizoltan/github/_uj/AngularChess/angular-chess/src/app/chess/chess-figure-queen.ts"],"sourcesContent":["import { Figure } from \"./chess-figure\";\n\nexport class FigureQueen extends Figure implements IFigure {\n    \n    constructor(color: string){\n        super('queen', color, 8, 8);\n    }\n\n    isStepPossible(step: IStep): boolean {\n        let _retVal = false;\n        \n        if (this.isCoordsNotEquals(step)) {\n            if (this.isLinearStep(step) || this.isDiagonalStep(step)) {\n                if (this.isStepNotBlocked(step)) {\n                    _retVal = true;\n                }\n            }\n        }\n\n        return _retVal;\n    }\n\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,OAAM,MAAOC,WAAY,SAAQD,MAAM;EAEnCE,YAAYC,KAAa;IACrB,KAAK,CAAC,OAAO,EAAEA,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EAC/B;EAEAC,cAAcA,CAACC,IAAW;IACtB,IAAIC,OAAO,GAAG,KAAK;IAEnB,IAAI,IAAI,CAACC,iBAAiB,CAACF,IAAI,CAAC,EAAE;MAC9B,IAAI,IAAI,CAACG,YAAY,CAACH,IAAI,CAAC,IAAI,IAAI,CAACI,cAAc,CAACJ,IAAI,CAAC,EAAE;QACtD,IAAI,IAAI,CAACK,gBAAgB,CAACL,IAAI,CAAC,EAAE;UAC7BC,OAAO,GAAG,IAAI;QAClB;MACJ;IACJ;IAEA,OAAOA,OAAO;EAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}