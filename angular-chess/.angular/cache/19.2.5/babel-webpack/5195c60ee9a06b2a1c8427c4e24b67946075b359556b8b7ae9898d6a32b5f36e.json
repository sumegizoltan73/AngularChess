{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nclass TypifiedEventEmitter {\n  constructor(_type) {\n    this._type = _type;\n    this.type = _type;\n    this.eventEmitter = new EventEmitter();\n  }\n}\nexport class ChessEvents {\n  constructor() {\n    this.eventEmitterList = [];\n  }\n  subscribe(type, complete) {\n    let e = this.getEventEmitter(type);\n    if (!e) {\n      e = new TypifiedEventEmitter(type);\n      this.eventEmitterList.push(e);\n    }\n    e.eventEmitter.subscribe(complete);\n  }\n  emit(type, eventArgs) {\n    let e = this.getEventEmitter(type);\n    if (e) {\n      e.eventEmitter.emit(eventArgs);\n    }\n  }\n  getEventEmitter(type) {\n    let _retVal = undefined;\n    for (let i = 0; i < this.eventEmitterList.length; i++) {\n      const element = this.eventEmitterList[i];\n      if (element.type === type) {\n        _retVal = element;\n        break;\n      }\n    }\n    return _retVal;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}